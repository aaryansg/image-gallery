{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaryan\\\\Documents\\\\coding\\\\image-gallery\\\\frontend\\\\src\\\\components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './ImageModal.css';\n\n// Set the app element for react-modal\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif (typeof window !== 'undefined') {\n  ReactModal.setAppElement('#root');\n}\nconst ImageModal = ({\n  image,\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [activeTool, setActiveTool] = useState('view');\n  const [brushColor, setBrushColor] = useState('#ff0000');\n  const [brushWidth, setBrushWidth] = useState(5);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [cropMode, setCropMode] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: 'px',\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const imgRef = useRef(null);\n  const originalImageRef = useRef(null);\n  const modalRef = useRef(null);\n\n  // Reset state when modal closes\n  useEffect(() => {\n    if (!isOpen) {\n      setImageLoaded(false);\n      setCropMode(false);\n      setActiveTool('view');\n    }\n  }, [isOpen]);\n\n  // Initialize when modal opens and image is available\n  useEffect(() => {\n    if (isOpen && image) {\n      // Wait for the modal to be fully rendered and canvas to be available\n      const checkCanvasAndLoad = () => {\n        if (canvasRef.current) {\n          loadImageToCanvas();\n        } else {\n          // If canvas isn't available yet, wait a bit more\n          setTimeout(checkCanvasAndLoad, 50);\n        }\n      };\n      checkCanvasAndLoad();\n    }\n  }, [isOpen, image]);\n  const loadImageToCanvas = () => {\n    if (!canvasRef.current) {\n      console.error('Canvas ref is still not available');\n      return;\n    }\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = () => {\n      try {\n        originalImageRef.current = img;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        // Set canvas dimensions to match image\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // Draw the image on canvas\n        ctx.drawImage(img, 0, 0);\n        contextRef.current = ctx;\n        setImageLoaded(true);\n      } catch (error) {\n        console.error('Error drawing image to canvas:', error);\n        setImageLoaded(false);\n      }\n    };\n    img.onerror = error => {\n      console.error('Failed to load image:', error);\n      setImageLoaded(false);\n\n      // Fallback: try without CORS\n      const fallbackImg = new Image();\n      fallbackImg.onload = () => {\n        try {\n          originalImageRef.current = fallbackImg;\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          canvas.width = fallbackImg.width;\n          canvas.height = fallbackImg.height;\n          ctx.drawImage(fallbackImg, 0, 0);\n          contextRef.current = ctx;\n          setImageLoaded(true);\n        } catch (error) {\n          console.error('Error drawing fallback image:', error);\n          setImageLoaded(false);\n        }\n      };\n      fallbackImg.onerror = () => {\n        console.error('Fallback image loading also failed');\n        setImageLoaded(false);\n      };\n      fallbackImg.src = image.file_path;\n    };\n    img.src = image.file_path;\n  };\n\n  // Drawing functions\n  const startDrawing = e => {\n    if (activeTool !== 'brush' || !contextRef.current) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = (e.clientX - rect.left) * scaleX;\n    const y = (e.clientY - rect.top) * scaleY;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x, y);\n    contextRef.current.lineWidth = brushWidth;\n    contextRef.current.strokeStyle = brushColor;\n    contextRef.current.lineCap = 'round';\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing || !contextRef.current) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = (e.clientX - rect.left) * scaleX;\n    const y = (e.clientY - rect.top) * scaleY;\n    contextRef.current.lineTo(x, y);\n    contextRef.current.stroke();\n  };\n  const stopDrawing = () => {\n    if (contextRef.current) {\n      contextRef.current.closePath();\n    }\n    setIsDrawing(false);\n  };\n  const handleAddText = () => {\n    if (!contextRef.current) return;\n    const text = prompt('Enter text to add to the image:');\n    if (text) {\n      contextRef.current.font = '24px Arial';\n      contextRef.current.fillStyle = brushColor;\n      contextRef.current.fillText(text, 50, 50);\n    }\n  };\n  const handleRotate = degrees => {\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = contextRef.current;\n    const tempCanvas = document.createElement('canvas');\n    const tempCtx = tempCanvas.getContext('2d');\n\n    // Set temp canvas size (swap dimensions for 90Â° rotations)\n    if (Math.abs(degrees) === 90) {\n      tempCanvas.width = canvas.height;\n      tempCanvas.height = canvas.width;\n    } else {\n      tempCanvas.width = canvas.width;\n      tempCanvas.height = canvas.height;\n    }\n\n    // Rotate and draw\n    tempCtx.translate(tempCanvas.width / 2, tempCanvas.height / 2);\n    tempCtx.rotate(degrees * Math.PI / 180);\n    tempCtx.drawImage(canvas, -canvas.width / 2, -canvas.height / 2);\n\n    // Resize main canvas and draw rotated image\n    canvas.width = tempCanvas.width;\n    canvas.height = tempCanvas.height;\n    ctx.drawImage(tempCanvas, 0, 0);\n  };\n  const handleCropComplete = async () => {\n    if (!imgRef.current || !completedCrop || !contextRef.current || !canvasRef.current) return;\n    try {\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = contextRef.current;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        setCropMode(false);\n        originalImageRef.current = img;\n      };\n      img.src = croppedImage;\n    } catch (error) {\n      console.error('Error cropping image:', error);\n      alert('Error cropping image. Please try again.');\n    }\n  };\n  const getCroppedImg = (image, crop) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return canvas.toDataURL('image/png');\n  };\n  const handleResize = () => {\n    const newWidth = prompt('Enter new width (in pixels):');\n    const newHeight = prompt('Enter new height (in pixels):');\n    if (newWidth && newHeight && !isNaN(newWidth) && !isNaN(newHeight)) {\n      if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\n      const canvas = canvasRef.current;\n      const ctx = contextRef.current;\n      const tempCanvas = document.createElement('canvas');\n      const tempCtx = tempCanvas.getContext('2d');\n      tempCanvas.width = parseInt(newWidth);\n      tempCanvas.height = parseInt(newHeight);\n\n      // Draw original image resized\n      tempCtx.drawImage(originalImageRef.current, 0, 0, tempCanvas.width, tempCanvas.height);\n\n      // Update main canvas\n      canvas.width = tempCanvas.width;\n      canvas.height = tempCanvas.height;\n      ctx.drawImage(tempCanvas, 0, 0);\n    }\n  };\n  const handleClear = () => {\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = contextRef.current;\n    const img = originalImageRef.current;\n    canvas.width = img.width;\n    canvas.height = img.height;\n    ctx.drawImage(img, 0, 0);\n  };\n  const handleSave = () => {\n    if (!canvasRef.current) return;\n    try {\n      const dataURL = canvasRef.current.toDataURL('image/png');\n      onSave({\n        imageData: dataURL,\n        filename: image.filename\n      });\n    } catch (error) {\n      console.error('Error saving image:', error);\n      alert('Error saving image. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    className: \"image-modal\",\n    overlayClassName: \"image-modal-overlay\",\n    shouldCloseOnOverlayClick: false,\n    ref: modalRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Edit Image: \", (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTool === 'view' ? 'active' : '',\n            onClick: () => setActiveTool('view'),\n            children: \"\\uD83D\\uDC41\\uFE0F View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTool === 'brush' ? 'active' : '',\n            onClick: () => setActiveTool('brush'),\n            children: \"\\uD83D\\uDD8C\\uFE0F Draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddText,\n            children: \"\\uD83D\\uDCDD Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(90),\n            children: \"\\uD83D\\uDD04 90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(-90),\n            children: \"\\uD83D\\uDD04 -90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCropMode(!cropMode),\n            children: \"\\u2702\\uFE0F Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResize,\n            children: \"\\uD83D\\uDCCF Resize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClear,\n            children: \"\\uD83D\\uDDD1\\uFE0F Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), activeTool === 'brush' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brush-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: brushColor,\n            onChange: e => setBrushColor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: brushWidth,\n            onChange: e => setBrushWidth(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [brushWidth, \"px\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: !imageLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading image...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.8rem',\n              color: 'var(--text-secondary)',\n              marginTop: '0.5rem'\n            },\n            children: \"If this takes too long, the image might not be accessible due to CORS restrictions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this) : cropMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-mode\",\n          children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n            crop: crop,\n            onChange: setCrop,\n            onComplete: setCompletedCrop,\n            keepSelection: true,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              ref: imgRef,\n              src: image.file_path,\n              alt: \"Crop preview\",\n              onLoad: () => setCrop({\n                unit: 'px',\n                width: 200,\n                height: 200,\n                x: 0,\n                y: 0\n              }),\n              style: {\n                maxWidth: '100%',\n                maxHeight: '60vh'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crop-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCropComplete,\n              className: \"btn btn-primary\",\n              children: \"Apply Crop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCropMode(false),\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"drawing-canvas\",\n          onMouseDown: activeTool === 'brush' ? startDrawing : undefined,\n          onMouseMove: activeTool === 'brush' ? draw : undefined,\n          onMouseUp: activeTool === 'brush' ? stopDrawing : undefined,\n          onMouseLeave: activeTool === 'brush' ? stopDrawing : undefined,\n          style: {\n            cursor: activeTool === 'brush' ? 'crosshair' : 'default',\n            maxWidth: '100%',\n            maxHeight: '60vh',\n            border: '2px solid var(--accent)',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: image && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Original: \", image.width, \"\\xD7\", image.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), canvasRef.current && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Current: \", canvasRef.current.width, \"\\xD7\", canvasRef.current.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"btn btn-primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageModal, \"A5DDNrL3Xmvb2Cf1r0ONckifRHU=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactModal","ReactCrop","jsxDEV","_jsxDEV","Fragment","_Fragment","window","setAppElement","ImageModal","image","isOpen","onClose","onSave","_s","activeTool","setActiveTool","brushColor","setBrushColor","brushWidth","setBrushWidth","isDrawing","setIsDrawing","imageLoaded","setImageLoaded","cropMode","setCropMode","crop","setCrop","unit","width","height","x","y","completedCrop","setCompletedCrop","canvasRef","contextRef","imgRef","originalImageRef","modalRef","checkCanvasAndLoad","current","loadImageToCanvas","setTimeout","console","error","img","Image","crossOrigin","onload","canvas","ctx","getContext","drawImage","onerror","fallbackImg","src","file_path","startDrawing","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","beginPath","moveTo","lineWidth","strokeStyle","lineCap","draw","lineTo","stroke","stopDrawing","closePath","handleAddText","text","prompt","font","fillStyle","fillText","handleRotate","degrees","tempCanvas","document","createElement","tempCtx","Math","abs","translate","rotate","PI","handleCropComplete","croppedImage","getCroppedImg","alert","naturalWidth","naturalHeight","toDataURL","handleResize","newWidth","newHeight","isNaN","parseInt","handleClear","handleSave","dataURL","imageData","filename","onRequestClose","className","overlayClassName","shouldCloseOnOverlayClick","ref","children","title","original_filename","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","target","min","max","style","fontSize","color","marginTop","onComplete","keepSelection","alt","onLoad","maxWidth","maxHeight","onMouseDown","undefined","onMouseMove","onMouseUp","onMouseLeave","cursor","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Aaryan/Documents/coding/image-gallery/frontend/src/components/ImageModal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './ImageModal.css';\r\n\r\n// Set the app element for react-modal\r\nif (typeof window !== 'undefined') {\r\n  ReactModal.setAppElement('#root');\r\n}\r\n\r\nconst ImageModal = ({ image, isOpen, onClose, onSave }) => {\r\n  const [activeTool, setActiveTool] = useState('view');\r\n  const [brushColor, setBrushColor] = useState('#ff0000');\r\n  const [brushWidth, setBrushWidth] = useState(5);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [cropMode, setCropMode] = useState(false);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  \r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const imgRef = useRef(null);\r\n  const originalImageRef = useRef(null);\r\n  const modalRef = useRef(null);\r\n\r\n  // Reset state when modal closes\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      setImageLoaded(false);\r\n      setCropMode(false);\r\n      setActiveTool('view');\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Initialize when modal opens and image is available\r\n  useEffect(() => {\r\n    if (isOpen && image) {\r\n      // Wait for the modal to be fully rendered and canvas to be available\r\n      const checkCanvasAndLoad = () => {\r\n        if (canvasRef.current) {\r\n          loadImageToCanvas();\r\n        } else {\r\n          // If canvas isn't available yet, wait a bit more\r\n          setTimeout(checkCanvasAndLoad, 50);\r\n        }\r\n      };\r\n\r\n      checkCanvasAndLoad();\r\n    }\r\n  }, [isOpen, image]);\r\n\r\n  const loadImageToCanvas = () => {\r\n    if (!canvasRef.current) {\r\n      console.error('Canvas ref is still not available');\r\n      return;\r\n    }\r\n\r\n    const img = new Image();\r\n    img.crossOrigin = 'anonymous';\r\n    \r\n    img.onload = () => {\r\n      try {\r\n        originalImageRef.current = img;\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        // Set canvas dimensions to match image\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        \r\n        // Draw the image on canvas\r\n        ctx.drawImage(img, 0, 0);\r\n        contextRef.current = ctx;\r\n        setImageLoaded(true);\r\n      } catch (error) {\r\n        console.error('Error drawing image to canvas:', error);\r\n        setImageLoaded(false);\r\n      }\r\n    };\r\n    \r\n    img.onerror = (error) => {\r\n      console.error('Failed to load image:', error);\r\n      setImageLoaded(false);\r\n      \r\n      // Fallback: try without CORS\r\n      const fallbackImg = new Image();\r\n      fallbackImg.onload = () => {\r\n        try {\r\n          originalImageRef.current = fallbackImg;\r\n          const canvas = canvasRef.current;\r\n          const ctx = canvas.getContext('2d');\r\n          \r\n          canvas.width = fallbackImg.width;\r\n          canvas.height = fallbackImg.height;\r\n          ctx.drawImage(fallbackImg, 0, 0);\r\n          contextRef.current = ctx;\r\n          setImageLoaded(true);\r\n        } catch (error) {\r\n          console.error('Error drawing fallback image:', error);\r\n          setImageLoaded(false);\r\n        }\r\n      };\r\n      fallbackImg.onerror = () => {\r\n        console.error('Fallback image loading also failed');\r\n        setImageLoaded(false);\r\n      };\r\n      fallbackImg.src = image.file_path;\r\n    };\r\n    \r\n    img.src = image.file_path;\r\n  };\r\n\r\n  // Drawing functions\r\n  const startDrawing = (e) => {\r\n    if (activeTool !== 'brush' || !contextRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const scaleX = canvas.width / rect.width;\r\n    const scaleY = canvas.height / rect.height;\r\n    const x = (e.clientX - rect.left) * scaleX;\r\n    const y = (e.clientY - rect.top) * scaleY;\r\n    \r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(x, y);\r\n    contextRef.current.lineWidth = brushWidth;\r\n    contextRef.current.strokeStyle = brushColor;\r\n    contextRef.current.lineCap = 'round';\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing || !contextRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const scaleX = canvas.width / rect.width;\r\n    const scaleY = canvas.height / rect.height;\r\n    const x = (e.clientX - rect.left) * scaleX;\r\n    const y = (e.clientY - rect.top) * scaleY;\r\n    \r\n    contextRef.current.lineTo(x, y);\r\n    contextRef.current.stroke();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    if (contextRef.current) {\r\n      contextRef.current.closePath();\r\n    }\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const handleAddText = () => {\r\n    if (!contextRef.current) return;\r\n    \r\n    const text = prompt('Enter text to add to the image:');\r\n    if (text) {\r\n      contextRef.current.font = '24px Arial';\r\n      contextRef.current.fillStyle = brushColor;\r\n      contextRef.current.fillText(text, 50, 50);\r\n    }\r\n  };\r\n\r\n  const handleRotate = (degrees) => {\r\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = contextRef.current;\r\n    const tempCanvas = document.createElement('canvas');\r\n    const tempCtx = tempCanvas.getContext('2d');\r\n    \r\n    // Set temp canvas size (swap dimensions for 90Â° rotations)\r\n    if (Math.abs(degrees) === 90) {\r\n      tempCanvas.width = canvas.height;\r\n      tempCanvas.height = canvas.width;\r\n    } else {\r\n      tempCanvas.width = canvas.width;\r\n      tempCanvas.height = canvas.height;\r\n    }\r\n    \r\n    // Rotate and draw\r\n    tempCtx.translate(tempCanvas.width / 2, tempCanvas.height / 2);\r\n    tempCtx.rotate((degrees * Math.PI) / 180);\r\n    tempCtx.drawImage(canvas, -canvas.width / 2, -canvas.height / 2);\r\n    \r\n    // Resize main canvas and draw rotated image\r\n    canvas.width = tempCanvas.width;\r\n    canvas.height = tempCanvas.height;\r\n    ctx.drawImage(tempCanvas, 0, 0);\r\n  };\r\n\r\n  const handleCropComplete = async () => {\r\n    if (!imgRef.current || !completedCrop || !contextRef.current || !canvasRef.current) return;\r\n\r\n    try {\r\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = contextRef.current;\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n        setCropMode(false);\r\n        originalImageRef.current = img;\r\n      };\r\n      img.src = croppedImage;\r\n    } catch (error) {\r\n      console.error('Error cropping image:', error);\r\n      alert('Error cropping image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (image, crop) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return canvas.toDataURL('image/png');\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const newWidth = prompt('Enter new width (in pixels):');\r\n    const newHeight = prompt('Enter new height (in pixels):');\r\n    \r\n    if (newWidth && newHeight && !isNaN(newWidth) && !isNaN(newHeight)) {\r\n      if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\r\n      \r\n      const canvas = canvasRef.current;\r\n      const ctx = contextRef.current;\r\n      const tempCanvas = document.createElement('canvas');\r\n      const tempCtx = tempCanvas.getContext('2d');\r\n      \r\n      tempCanvas.width = parseInt(newWidth);\r\n      tempCanvas.height = parseInt(newHeight);\r\n      \r\n      // Draw original image resized\r\n      tempCtx.drawImage(originalImageRef.current, 0, 0, tempCanvas.width, tempCanvas.height);\r\n      \r\n      // Update main canvas\r\n      canvas.width = tempCanvas.width;\r\n      canvas.height = tempCanvas.height;\r\n      ctx.drawImage(tempCanvas, 0, 0);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = contextRef.current;\r\n    const img = originalImageRef.current;\r\n    \r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    ctx.drawImage(img, 0, 0);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!canvasRef.current) return;\r\n    \r\n    try {\r\n      const dataURL = canvasRef.current.toDataURL('image/png');\r\n      onSave({\r\n        imageData: dataURL,\r\n        filename: image.filename\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving image:', error);\r\n      alert('Error saving image. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n      className=\"image-modal\"\r\n      overlayClassName=\"image-modal-overlay\"\r\n      shouldCloseOnOverlayClick={false}\r\n      ref={modalRef}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h3>Edit Image: {image?.title || image?.original_filename}</h3>\r\n        <button onClick={onClose} className=\"close-btn\">Ã</button>\r\n      </div>\r\n\r\n      <div className=\"modal-content\">\r\n        <div className=\"toolbar\">\r\n          <div className=\"tool-group\">\r\n            <button\r\n              className={activeTool === 'view' ? 'active' : ''}\r\n              onClick={() => setActiveTool('view')}\r\n            >\r\n              ðï¸ View\r\n            </button>\r\n            <button\r\n              className={activeTool === 'brush' ? 'active' : ''}\r\n              onClick={() => setActiveTool('brush')}\r\n            >\r\n              ðï¸ Draw\r\n            </button>\r\n            <button onClick={handleAddText}>\r\n              ð Text\r\n            </button>\r\n            <button onClick={() => handleRotate(90)}>\r\n              ð 90Â°\r\n            </button>\r\n            <button onClick={() => handleRotate(-90)}>\r\n              ð -90Â°\r\n            </button>\r\n            <button onClick={() => setCropMode(!cropMode)}>\r\n              âï¸ Crop\r\n            </button>\r\n            <button onClick={handleResize}>\r\n              ð Resize\r\n            </button>\r\n            <button onClick={handleClear}>\r\n              ðï¸ Reset\r\n            </button>\r\n          </div>\r\n\r\n          {activeTool === 'brush' && (\r\n            <div className=\"brush-controls\">\r\n              <label>Color:</label>\r\n              <input\r\n                type=\"color\"\r\n                value={brushColor}\r\n                onChange={(e) => setBrushColor(e.target.value)}\r\n              />\r\n              <label>Size:</label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"20\"\r\n                value={brushWidth}\r\n                onChange={(e) => setBrushWidth(parseInt(e.target.value))}\r\n              />\r\n              <span>{brushWidth}px</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"canvas-container\">\r\n          {!imageLoaded ? (\r\n            <div className=\"loading\">\r\n              <div>Loading image...</div>\r\n              <div style={{fontSize: '0.8rem', color: 'var(--text-secondary)', marginTop: '0.5rem'}}>\r\n                If this takes too long, the image might not be accessible due to CORS restrictions.\r\n              </div>\r\n            </div>\r\n          ) : cropMode ? (\r\n            <div className=\"crop-mode\">\r\n              <ReactCrop\r\n                crop={crop}\r\n                onChange={setCrop}\r\n                onComplete={setCompletedCrop}\r\n                keepSelection={true}\r\n              >\r\n                <img\r\n                  ref={imgRef}\r\n                  src={image.file_path}\r\n                  alt=\"Crop preview\"\r\n                  onLoad={() => setCrop({ unit: 'px', width: 200, height: 200, x: 0, y: 0 })}\r\n                  style={{ maxWidth: '100%', maxHeight: '60vh' }}\r\n                />\r\n              </ReactCrop>\r\n              <div className=\"crop-controls\">\r\n                <button onClick={handleCropComplete} className=\"btn btn-primary\">\r\n                  Apply Crop\r\n                </button>\r\n                <button onClick={() => setCropMode(false)} className=\"btn btn-secondary\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <canvas\r\n              ref={canvasRef}\r\n              className=\"drawing-canvas\"\r\n              onMouseDown={activeTool === 'brush' ? startDrawing : undefined}\r\n              onMouseMove={activeTool === 'brush' ? draw : undefined}\r\n              onMouseUp={activeTool === 'brush' ? stopDrawing : undefined}\r\n              onMouseLeave={activeTool === 'brush' ? stopDrawing : undefined}\r\n              style={{ \r\n                cursor: activeTool === 'brush' ? 'crosshair' : 'default',\r\n                maxWidth: '100%',\r\n                maxHeight: '60vh',\r\n                border: '2px solid var(--accent)',\r\n                borderRadius: '8px'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <div className=\"image-info\">\r\n          {image && (\r\n            <>\r\n              <span>Original: {image.width}Ã{image.height}</span>\r\n              {canvasRef.current && (\r\n                <span>Current: {canvasRef.current.width}Ã{canvasRef.current.height}</span>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"modal-actions\">\r\n          <button onClick={onClose} className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n          <button onClick={handleSave} className=\"btn btn-primary\">\r\n            Save Changes\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default ImageModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}