{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaryan\\\\Downloads\\\\image-gallery\\\\image-gallery\\\\frontend\\\\src\\\\components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './ImageModal.css';\n\n// Set the app element for react-modal\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif (typeof window !== 'undefined') {\n  ReactModal.setAppElement('#root');\n}\nconst ImageModal = ({\n  image,\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [activeTool, setActiveTool] = useState('view');\n  const [brushColor, setBrushColor] = useState('#ff0000');\n  const [brushWidth, setBrushWidth] = useState(5);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [cropMode, setCropMode] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: 'px',\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const imgRef = useRef(null);\n  const originalImageRef = useRef(null);\n\n  // Initialize when modal opens\n  useEffect(() => {\n    if (isOpen && image) {\n      setImageLoaded(false);\n      setCropMode(false);\n      loadImageToCanvas();\n    }\n  }, [isOpen, image]);\n\n  // In the loadImageToCanvas function, add error handling:\n  const loadImageToCanvas = () => {\n    if (!canvasRef.current) return;\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = () => {\n      originalImageRef.current = img;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      contextRef.current = ctx;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0);\n      setImageLoaded(true);\n    };\n    img.onerror = error => {\n      console.error('Failed to load image:', error);\n      setImageLoaded(false);\n\n      // Fallback: try without CORS\n      const fallbackImg = new Image();\n      fallbackImg.onload = () => {\n        originalImageRef.current = fallbackImg;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        contextRef.current = ctx;\n        canvas.width = fallbackImg.width;\n        canvas.height = fallbackImg.height;\n        ctx.drawImage(fallbackImg, 0, 0);\n        setImageLoaded(true);\n      };\n      fallbackImg.onerror = () => {\n        console.error('Fallback image loading also failed');\n        setImageLoaded(false);\n      };\n      fallbackImg.src = image.file_path;\n    };\n    img.src = image.file_path;\n  };\n\n  // Drawing functions\n  const startDrawing = e => {\n    if (activeTool !== 'brush' || !contextRef.current) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = (e.clientX - rect.left) * scaleX;\n    const y = (e.clientY - rect.top) * scaleY;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x, y);\n    contextRef.current.lineWidth = brushWidth;\n    contextRef.current.strokeStyle = brushColor;\n    contextRef.current.lineCap = 'round';\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing || !contextRef.current) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const x = (e.clientX - rect.left) * scaleX;\n    const y = (e.clientY - rect.top) * scaleY;\n    contextRef.current.lineTo(x, y);\n    contextRef.current.stroke();\n  };\n  const stopDrawing = () => {\n    if (contextRef.current) {\n      contextRef.current.closePath();\n    }\n    setIsDrawing(false);\n  };\n  const handleAddText = () => {\n    if (!contextRef.current) return;\n    const text = prompt('Enter text to add to the image:');\n    if (text) {\n      contextRef.current.font = '24px Arial';\n      contextRef.current.fillStyle = brushColor;\n      contextRef.current.fillText(text, 50, 50);\n    }\n  };\n  const handleRotate = degrees => {\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = contextRef.current;\n    const tempCanvas = document.createElement('canvas');\n    const tempCtx = tempCanvas.getContext('2d');\n\n    // Set temp canvas size (swap dimensions for 90Â° rotations)\n    if (Math.abs(degrees) === 90) {\n      tempCanvas.width = canvas.height;\n      tempCanvas.height = canvas.width;\n    } else {\n      tempCanvas.width = canvas.width;\n      tempCanvas.height = canvas.height;\n    }\n\n    // Rotate and draw\n    tempCtx.translate(tempCanvas.width / 2, tempCanvas.height / 2);\n    tempCtx.rotate(degrees * Math.PI / 180);\n    tempCtx.drawImage(canvas, -canvas.width / 2, -canvas.height / 2);\n\n    // Resize main canvas and draw rotated image\n    canvas.width = tempCanvas.width;\n    canvas.height = tempCanvas.height;\n    ctx.drawImage(tempCanvas, 0, 0);\n  };\n  const handleCropComplete = async () => {\n    if (!imgRef.current || !completedCrop || !contextRef.current || !canvasRef.current) return;\n    try {\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        const ctx = contextRef.current;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        setCropMode(false);\n        originalImageRef.current = img;\n      };\n      img.src = croppedImage;\n    } catch (error) {\n      console.error('Error cropping image:', error);\n      alert('Error cropping image. Please try again.');\n    }\n  };\n  const getCroppedImg = (image, crop) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return canvas.toDataURL('image/png');\n  };\n  const handleResize = () => {\n    const newWidth = prompt('Enter new width (in pixels):');\n    const newHeight = prompt('Enter new height (in pixels):');\n    if (newWidth && newHeight && !isNaN(newWidth) && !isNaN(newHeight)) {\n      if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\n      const canvas = canvasRef.current;\n      const ctx = contextRef.current;\n      const tempCanvas = document.createElement('canvas');\n      const tempCtx = tempCanvas.getContext('2d');\n      tempCanvas.width = parseInt(newWidth);\n      tempCanvas.height = parseInt(newHeight);\n\n      // Draw original image resized\n      tempCtx.drawImage(originalImageRef.current, 0, 0, tempCanvas.width, tempCanvas.height);\n\n      // Update main canvas\n      canvas.width = tempCanvas.width;\n      canvas.height = tempCanvas.height;\n      ctx.drawImage(tempCanvas, 0, 0);\n    }\n  };\n  const handleClear = () => {\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = contextRef.current;\n    const img = originalImageRef.current;\n    canvas.width = img.width;\n    canvas.height = img.height;\n    ctx.drawImage(img, 0, 0);\n  };\n  const handleSave = () => {\n    if (!canvasRef.current) return;\n    try {\n      const dataURL = canvasRef.current.toDataURL('image/png');\n      onSave({\n        imageData: dataURL,\n        filename: image.filename\n      });\n    } catch (error) {\n      console.error('Error saving image:', error);\n      alert('Error saving image. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    className: \"image-modal\",\n    overlayClassName: \"image-modal-overlay\",\n    shouldCloseOnOverlayClick: false,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Edit Image: \", (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTool === 'view' ? 'active' : '',\n            onClick: () => setActiveTool('view'),\n            children: \"\\uD83D\\uDC41\\uFE0F View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTool === 'brush' ? 'active' : '',\n            onClick: () => setActiveTool('brush'),\n            children: \"\\uD83D\\uDD8C\\uFE0F Draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddText,\n            children: \"\\uD83D\\uDCDD Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(90),\n            children: \"\\uD83D\\uDD04 90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(-90),\n            children: \"\\uD83D\\uDD04 -90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCropMode(!cropMode),\n            children: \"\\u2702\\uFE0F Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResize,\n            children: \"\\uD83D\\uDCCF Resize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClear,\n            children: \"\\uD83D\\uDDD1\\uFE0F Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), activeTool === 'brush' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brush-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: brushColor,\n            onChange: e => setBrushColor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"20\",\n            value: brushWidth,\n            onChange: e => setBrushWidth(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [brushWidth, \"px\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: !imageLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this) : cropMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-mode\",\n          children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n            crop: crop,\n            onChange: setCrop,\n            onComplete: setCompletedCrop,\n            keepSelection: true,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              ref: imgRef,\n              src: image.file_path,\n              alt: \"Crop preview\",\n              onLoad: () => setCrop({\n                unit: 'px',\n                width: 200,\n                height: 200,\n                x: 0,\n                y: 0\n              }),\n              style: {\n                maxWidth: '100%',\n                maxHeight: '60vh'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crop-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCropComplete,\n              className: \"btn btn-primary\",\n              children: \"Apply Crop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCropMode(false),\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"drawing-canvas\",\n          onMouseDown: activeTool === 'brush' ? startDrawing : undefined,\n          onMouseMove: activeTool === 'brush' ? draw : undefined,\n          onMouseUp: activeTool === 'brush' ? stopDrawing : undefined,\n          onMouseLeave: activeTool === 'brush' ? stopDrawing : undefined,\n          style: {\n            cursor: activeTool === 'brush' ? 'crosshair' : 'default',\n            maxWidth: '100%',\n            maxHeight: '60vh',\n            border: '2px solid var(--accent)',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: image && canvasRef.current && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Size: \", canvasRef.current.width, \"\\xD7\", canvasRef.current.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Original: \", image.width, \"\\xD7\", image.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"btn btn-primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageModal, \"uXN3zWMOW4neSXIIXQxHIXDh8RE=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactModal","ReactCrop","jsxDEV","_jsxDEV","Fragment","_Fragment","window","setAppElement","ImageModal","image","isOpen","onClose","onSave","_s","activeTool","setActiveTool","brushColor","setBrushColor","brushWidth","setBrushWidth","isDrawing","setIsDrawing","imageLoaded","setImageLoaded","cropMode","setCropMode","crop","setCrop","unit","width","height","x","y","completedCrop","setCompletedCrop","canvasRef","contextRef","imgRef","originalImageRef","loadImageToCanvas","current","img","Image","crossOrigin","onload","canvas","ctx","getContext","drawImage","onerror","error","console","fallbackImg","src","file_path","startDrawing","e","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","beginPath","moveTo","lineWidth","strokeStyle","lineCap","draw","lineTo","stroke","stopDrawing","closePath","handleAddText","text","prompt","font","fillStyle","fillText","handleRotate","degrees","tempCanvas","document","createElement","tempCtx","Math","abs","translate","rotate","PI","handleCropComplete","croppedImage","getCroppedImg","alert","naturalWidth","naturalHeight","toDataURL","handleResize","newWidth","newHeight","isNaN","parseInt","handleClear","handleSave","dataURL","imageData","filename","onRequestClose","className","overlayClassName","shouldCloseOnOverlayClick","children","title","original_filename","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","target","min","max","onComplete","keepSelection","ref","alt","onLoad","style","maxWidth","maxHeight","onMouseDown","undefined","onMouseMove","onMouseUp","onMouseLeave","cursor","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Aaryan/Downloads/image-gallery/image-gallery/frontend/src/components/ImageModal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './ImageModal.css';\r\n\r\n// Set the app element for react-modal\r\nif (typeof window !== 'undefined') {\r\n  ReactModal.setAppElement('#root');\r\n}\r\n\r\nconst ImageModal = ({ image, isOpen, onClose, onSave }) => {\r\n  const [activeTool, setActiveTool] = useState('view');\r\n  const [brushColor, setBrushColor] = useState('#ff0000');\r\n  const [brushWidth, setBrushWidth] = useState(5);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [cropMode, setCropMode] = useState(false);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  \r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const imgRef = useRef(null);\r\n  const originalImageRef = useRef(null);\r\n\r\n  // Initialize when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && image) {\r\n      setImageLoaded(false);\r\n      setCropMode(false);\r\n      loadImageToCanvas();\r\n    }\r\n  }, [isOpen, image]);\r\n\r\n // In the loadImageToCanvas function, add error handling:\r\nconst loadImageToCanvas = () => {\r\n  if (!canvasRef.current) return;\r\n\r\n  const img = new Image();\r\n  img.crossOrigin = 'anonymous';\r\n  \r\n  img.onload = () => {\r\n    originalImageRef.current = img;\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    contextRef.current = ctx;\r\n    \r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    ctx.drawImage(img, 0, 0);\r\n    setImageLoaded(true);\r\n  };\r\n  \r\n  img.onerror = (error) => {\r\n    console.error('Failed to load image:', error);\r\n    setImageLoaded(false);\r\n    \r\n    // Fallback: try without CORS\r\n    const fallbackImg = new Image();\r\n    fallbackImg.onload = () => {\r\n      originalImageRef.current = fallbackImg;\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      contextRef.current = ctx;\r\n      \r\n      canvas.width = fallbackImg.width;\r\n      canvas.height = fallbackImg.height;\r\n      ctx.drawImage(fallbackImg, 0, 0);\r\n      setImageLoaded(true);\r\n    };\r\n    fallbackImg.onerror = () => {\r\n      console.error('Fallback image loading also failed');\r\n      setImageLoaded(false);\r\n    };\r\n    fallbackImg.src = image.file_path;\r\n  };\r\n  \r\n  img.src = image.file_path;\r\n};\r\n\r\n  // Drawing functions\r\n  const startDrawing = (e) => {\r\n    if (activeTool !== 'brush' || !contextRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const scaleX = canvas.width / rect.width;\r\n    const scaleY = canvas.height / rect.height;\r\n    const x = (e.clientX - rect.left) * scaleX;\r\n    const y = (e.clientY - rect.top) * scaleY;\r\n    \r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(x, y);\r\n    contextRef.current.lineWidth = brushWidth;\r\n    contextRef.current.strokeStyle = brushColor;\r\n    contextRef.current.lineCap = 'round';\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing || !contextRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const scaleX = canvas.width / rect.width;\r\n    const scaleY = canvas.height / rect.height;\r\n    const x = (e.clientX - rect.left) * scaleX;\r\n    const y = (e.clientY - rect.top) * scaleY;\r\n    \r\n    contextRef.current.lineTo(x, y);\r\n    contextRef.current.stroke();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    if (contextRef.current) {\r\n      contextRef.current.closePath();\r\n    }\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const handleAddText = () => {\r\n    if (!contextRef.current) return;\r\n    \r\n    const text = prompt('Enter text to add to the image:');\r\n    if (text) {\r\n      contextRef.current.font = '24px Arial';\r\n      contextRef.current.fillStyle = brushColor;\r\n      contextRef.current.fillText(text, 50, 50);\r\n    }\r\n  };\r\n\r\n  const handleRotate = (degrees) => {\r\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = contextRef.current;\r\n    const tempCanvas = document.createElement('canvas');\r\n    const tempCtx = tempCanvas.getContext('2d');\r\n    \r\n    // Set temp canvas size (swap dimensions for 90Â° rotations)\r\n    if (Math.abs(degrees) === 90) {\r\n      tempCanvas.width = canvas.height;\r\n      tempCanvas.height = canvas.width;\r\n    } else {\r\n      tempCanvas.width = canvas.width;\r\n      tempCanvas.height = canvas.height;\r\n    }\r\n    \r\n    // Rotate and draw\r\n    tempCtx.translate(tempCanvas.width / 2, tempCanvas.height / 2);\r\n    tempCtx.rotate((degrees * Math.PI) / 180);\r\n    tempCtx.drawImage(canvas, -canvas.width / 2, -canvas.height / 2);\r\n    \r\n    // Resize main canvas and draw rotated image\r\n    canvas.width = tempCanvas.width;\r\n    canvas.height = tempCanvas.height;\r\n    ctx.drawImage(tempCanvas, 0, 0);\r\n  };\r\n\r\n  const handleCropComplete = async () => {\r\n    if (!imgRef.current || !completedCrop || !contextRef.current || !canvasRef.current) return;\r\n\r\n    try {\r\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = contextRef.current;\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n        setCropMode(false);\r\n        originalImageRef.current = img;\r\n      };\r\n      img.src = croppedImage;\r\n    } catch (error) {\r\n      console.error('Error cropping image:', error);\r\n      alert('Error cropping image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (image, crop) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return canvas.toDataURL('image/png');\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const newWidth = prompt('Enter new width (in pixels):');\r\n    const newHeight = prompt('Enter new height (in pixels):');\r\n    \r\n    if (newWidth && newHeight && !isNaN(newWidth) && !isNaN(newHeight)) {\r\n      if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\r\n      \r\n      const canvas = canvasRef.current;\r\n      const ctx = contextRef.current;\r\n      const tempCanvas = document.createElement('canvas');\r\n      const tempCtx = tempCanvas.getContext('2d');\r\n      \r\n      tempCanvas.width = parseInt(newWidth);\r\n      tempCanvas.height = parseInt(newHeight);\r\n      \r\n      // Draw original image resized\r\n      tempCtx.drawImage(originalImageRef.current, 0, 0, tempCanvas.width, tempCanvas.height);\r\n      \r\n      // Update main canvas\r\n      canvas.width = tempCanvas.width;\r\n      canvas.height = tempCanvas.height;\r\n      ctx.drawImage(tempCanvas, 0, 0);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    if (!contextRef.current || !canvasRef.current || !originalImageRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = contextRef.current;\r\n    const img = originalImageRef.current;\r\n    \r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    ctx.drawImage(img, 0, 0);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!canvasRef.current) return;\r\n    \r\n    try {\r\n      const dataURL = canvasRef.current.toDataURL('image/png');\r\n      onSave({\r\n        imageData: dataURL,\r\n        filename: image.filename\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving image:', error);\r\n      alert('Error saving image. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n      className=\"image-modal\"\r\n      overlayClassName=\"image-modal-overlay\"\r\n      shouldCloseOnOverlayClick={false}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h3>Edit Image: {image?.title || image?.original_filename}</h3>\r\n        <button onClick={onClose} className=\"close-btn\">Ã</button>\r\n      </div>\r\n\r\n      <div className=\"modal-content\">\r\n        <div className=\"toolbar\">\r\n          <div className=\"tool-group\">\r\n            <button\r\n              className={activeTool === 'view' ? 'active' : ''}\r\n              onClick={() => setActiveTool('view')}\r\n            >\r\n              ðï¸ View\r\n            </button>\r\n            <button\r\n              className={activeTool === 'brush' ? 'active' : ''}\r\n              onClick={() => setActiveTool('brush')}\r\n            >\r\n              ðï¸ Draw\r\n            </button>\r\n            <button onClick={handleAddText}>\r\n              ð Text\r\n            </button>\r\n            <button onClick={() => handleRotate(90)}>\r\n              ð 90Â°\r\n            </button>\r\n            <button onClick={() => handleRotate(-90)}>\r\n              ð -90Â°\r\n            </button>\r\n            <button onClick={() => setCropMode(!cropMode)}>\r\n              âï¸ Crop\r\n            </button>\r\n            <button onClick={handleResize}>\r\n              ð Resize\r\n            </button>\r\n            <button onClick={handleClear}>\r\n              ðï¸ Reset\r\n            </button>\r\n          </div>\r\n\r\n          {activeTool === 'brush' && (\r\n            <div className=\"brush-controls\">\r\n              <label>Color:</label>\r\n              <input\r\n                type=\"color\"\r\n                value={brushColor}\r\n                onChange={(e) => setBrushColor(e.target.value)}\r\n              />\r\n              <label>Size:</label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"20\"\r\n                value={brushWidth}\r\n                onChange={(e) => setBrushWidth(parseInt(e.target.value))}\r\n              />\r\n              <span>{brushWidth}px</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"canvas-container\">\r\n          {!imageLoaded ? (\r\n            <div className=\"loading\">Loading image...</div>\r\n          ) : cropMode ? (\r\n            <div className=\"crop-mode\">\r\n              <ReactCrop\r\n                crop={crop}\r\n                onChange={setCrop}\r\n                onComplete={setCompletedCrop}\r\n                keepSelection={true}\r\n              >\r\n                <img\r\n                  ref={imgRef}\r\n                  src={image.file_path}\r\n                  alt=\"Crop preview\"\r\n                  onLoad={() => setCrop({ unit: 'px', width: 200, height: 200, x: 0, y: 0 })}\r\n                  style={{ maxWidth: '100%', maxHeight: '60vh' }}\r\n                />\r\n              </ReactCrop>\r\n              <div className=\"crop-controls\">\r\n                <button onClick={handleCropComplete} className=\"btn btn-primary\">\r\n                  Apply Crop\r\n                </button>\r\n                <button onClick={() => setCropMode(false)} className=\"btn btn-secondary\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <canvas\r\n              ref={canvasRef}\r\n              className=\"drawing-canvas\"\r\n              onMouseDown={activeTool === 'brush' ? startDrawing : undefined}\r\n              onMouseMove={activeTool === 'brush' ? draw : undefined}\r\n              onMouseUp={activeTool === 'brush' ? stopDrawing : undefined}\r\n              onMouseLeave={activeTool === 'brush' ? stopDrawing : undefined}\r\n              style={{ \r\n                cursor: activeTool === 'brush' ? 'crosshair' : 'default',\r\n                maxWidth: '100%',\r\n                maxHeight: '60vh',\r\n                border: '2px solid var(--accent)',\r\n                borderRadius: '8px'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <div className=\"image-info\">\r\n          {image && canvasRef.current && (\r\n            <>\r\n              <span>Size: {canvasRef.current.width}Ã{canvasRef.current.height}</span>\r\n              <span>Original: {image.width}Ã{image.height}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"modal-actions\">\r\n          <button onClick={onClose} className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n          <button onClick={handleSave} className=\"btn btn-primary\">\r\n            Save Changes\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default ImageModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAO,qCAAqC;AAC5C,OAAO,kBAAkB;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EACjCN,UAAU,CAACO,aAAa,CAAC,OAAO,CAAC;AACnC;AAEA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6B,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC;IAAE+B,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE,GAAG;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACrF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMsC,SAAS,GAAGrC,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMsC,UAAU,GAAGtC,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMuC,MAAM,GAAGvC,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMwC,gBAAgB,GAAGxC,MAAM,CAAC,IAAI,CAAC;;EAErC;EACAC,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,IAAID,KAAK,EAAE;MACnBc,cAAc,CAAC,KAAK,CAAC;MACrBE,WAAW,CAAC,KAAK,CAAC;MAClBc,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAAC7B,MAAM,EAAED,KAAK,CAAC,CAAC;;EAEpB;EACD,MAAM8B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACJ,SAAS,CAACK,OAAO,EAAE;IAExB,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,WAAW,GAAG,WAAW;IAE7BF,GAAG,CAACG,MAAM,GAAG,MAAM;MACjBN,gBAAgB,CAACE,OAAO,GAAGC,GAAG;MAC9B,MAAMI,MAAM,GAAGV,SAAS,CAACK,OAAO;MAChC,MAAMM,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACnCX,UAAU,CAACI,OAAO,GAAGM,GAAG;MAExBD,MAAM,CAAChB,KAAK,GAAGY,GAAG,CAACZ,KAAK;MACxBgB,MAAM,CAACf,MAAM,GAAGW,GAAG,CAACX,MAAM;MAC1BgB,GAAG,CAACE,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;MACxBlB,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAEDkB,GAAG,CAACQ,OAAO,GAAIC,KAAK,IAAK;MACvBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C3B,cAAc,CAAC,KAAK,CAAC;;MAErB;MACA,MAAM6B,WAAW,GAAG,IAAIV,KAAK,CAAC,CAAC;MAC/BU,WAAW,CAACR,MAAM,GAAG,MAAM;QACzBN,gBAAgB,CAACE,OAAO,GAAGY,WAAW;QACtC,MAAMP,MAAM,GAAGV,SAAS,CAACK,OAAO;QAChC,MAAMM,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;QACnCX,UAAU,CAACI,OAAO,GAAGM,GAAG;QAExBD,MAAM,CAAChB,KAAK,GAAGuB,WAAW,CAACvB,KAAK;QAChCgB,MAAM,CAACf,MAAM,GAAGsB,WAAW,CAACtB,MAAM;QAClCgB,GAAG,CAACE,SAAS,CAACI,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC7B,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC;MACD6B,WAAW,CAACH,OAAO,GAAG,MAAM;QAC1BE,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAC;QACnD3B,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MACD6B,WAAW,CAACC,GAAG,GAAG5C,KAAK,CAAC6C,SAAS;IACnC,CAAC;IAEDb,GAAG,CAACY,GAAG,GAAG5C,KAAK,CAAC6C,SAAS;EAC3B,CAAC;;EAEC;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,IAAI1C,UAAU,KAAK,OAAO,IAAI,CAACsB,UAAU,CAACI,OAAO,EAAE;IAEnD,MAAMK,MAAM,GAAGV,SAAS,CAACK,OAAO;IAChC,MAAMiB,IAAI,GAAGZ,MAAM,CAACa,qBAAqB,CAAC,CAAC;IAC3C,MAAMC,MAAM,GAAGd,MAAM,CAAChB,KAAK,GAAG4B,IAAI,CAAC5B,KAAK;IACxC,MAAM+B,MAAM,GAAGf,MAAM,CAACf,MAAM,GAAG2B,IAAI,CAAC3B,MAAM;IAC1C,MAAMC,CAAC,GAAG,CAACyB,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACK,IAAI,IAAIH,MAAM;IAC1C,MAAM3B,CAAC,GAAG,CAACwB,CAAC,CAACO,OAAO,GAAGN,IAAI,CAACO,GAAG,IAAIJ,MAAM;IAEzCxB,UAAU,CAACI,OAAO,CAACyB,SAAS,CAAC,CAAC;IAC9B7B,UAAU,CAACI,OAAO,CAAC0B,MAAM,CAACnC,CAAC,EAAEC,CAAC,CAAC;IAC/BI,UAAU,CAACI,OAAO,CAAC2B,SAAS,GAAGjD,UAAU;IACzCkB,UAAU,CAACI,OAAO,CAAC4B,WAAW,GAAGpD,UAAU;IAC3CoB,UAAU,CAACI,OAAO,CAAC6B,OAAO,GAAG,OAAO;IACpChD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMiD,IAAI,GAAId,CAAC,IAAK;IAClB,IAAI,CAACpC,SAAS,IAAI,CAACgB,UAAU,CAACI,OAAO,EAAE;IAEvC,MAAMK,MAAM,GAAGV,SAAS,CAACK,OAAO;IAChC,MAAMiB,IAAI,GAAGZ,MAAM,CAACa,qBAAqB,CAAC,CAAC;IAC3C,MAAMC,MAAM,GAAGd,MAAM,CAAChB,KAAK,GAAG4B,IAAI,CAAC5B,KAAK;IACxC,MAAM+B,MAAM,GAAGf,MAAM,CAACf,MAAM,GAAG2B,IAAI,CAAC3B,MAAM;IAC1C,MAAMC,CAAC,GAAG,CAACyB,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACK,IAAI,IAAIH,MAAM;IAC1C,MAAM3B,CAAC,GAAG,CAACwB,CAAC,CAACO,OAAO,GAAGN,IAAI,CAACO,GAAG,IAAIJ,MAAM;IAEzCxB,UAAU,CAACI,OAAO,CAAC+B,MAAM,CAACxC,CAAC,EAAEC,CAAC,CAAC;IAC/BI,UAAU,CAACI,OAAO,CAACgC,MAAM,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIrC,UAAU,CAACI,OAAO,EAAE;MACtBJ,UAAU,CAACI,OAAO,CAACkC,SAAS,CAAC,CAAC;IAChC;IACArD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMsD,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACvC,UAAU,CAACI,OAAO,EAAE;IAEzB,MAAMoC,IAAI,GAAGC,MAAM,CAAC,iCAAiC,CAAC;IACtD,IAAID,IAAI,EAAE;MACRxC,UAAU,CAACI,OAAO,CAACsC,IAAI,GAAG,YAAY;MACtC1C,UAAU,CAACI,OAAO,CAACuC,SAAS,GAAG/D,UAAU;MACzCoB,UAAU,CAACI,OAAO,CAACwC,QAAQ,CAACJ,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;IAC3C;EACF,CAAC;EAED,MAAMK,YAAY,GAAIC,OAAO,IAAK;IAChC,IAAI,CAAC9C,UAAU,CAACI,OAAO,IAAI,CAACL,SAAS,CAACK,OAAO,IAAI,CAACF,gBAAgB,CAACE,OAAO,EAAE;IAE5E,MAAMK,MAAM,GAAGV,SAAS,CAACK,OAAO;IAChC,MAAMM,GAAG,GAAGV,UAAU,CAACI,OAAO;IAC9B,MAAM2C,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACnD,MAAMC,OAAO,GAAGH,UAAU,CAACpC,UAAU,CAAC,IAAI,CAAC;;IAE3C;IACA,IAAIwC,IAAI,CAACC,GAAG,CAACN,OAAO,CAAC,KAAK,EAAE,EAAE;MAC5BC,UAAU,CAACtD,KAAK,GAAGgB,MAAM,CAACf,MAAM;MAChCqD,UAAU,CAACrD,MAAM,GAAGe,MAAM,CAAChB,KAAK;IAClC,CAAC,MAAM;MACLsD,UAAU,CAACtD,KAAK,GAAGgB,MAAM,CAAChB,KAAK;MAC/BsD,UAAU,CAACrD,MAAM,GAAGe,MAAM,CAACf,MAAM;IACnC;;IAEA;IACAwD,OAAO,CAACG,SAAS,CAACN,UAAU,CAACtD,KAAK,GAAG,CAAC,EAAEsD,UAAU,CAACrD,MAAM,GAAG,CAAC,CAAC;IAC9DwD,OAAO,CAACI,MAAM,CAAER,OAAO,GAAGK,IAAI,CAACI,EAAE,GAAI,GAAG,CAAC;IACzCL,OAAO,CAACtC,SAAS,CAACH,MAAM,EAAE,CAACA,MAAM,CAAChB,KAAK,GAAG,CAAC,EAAE,CAACgB,MAAM,CAACf,MAAM,GAAG,CAAC,CAAC;;IAEhE;IACAe,MAAM,CAAChB,KAAK,GAAGsD,UAAU,CAACtD,KAAK;IAC/BgB,MAAM,CAACf,MAAM,GAAGqD,UAAU,CAACrD,MAAM;IACjCgB,GAAG,CAACE,SAAS,CAACmC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;EACjC,CAAC;EAED,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACvD,MAAM,CAACG,OAAO,IAAI,CAACP,aAAa,IAAI,CAACG,UAAU,CAACI,OAAO,IAAI,CAACL,SAAS,CAACK,OAAO,EAAE;IAEpF,IAAI;MACF,MAAMqD,YAAY,GAAG,MAAMC,aAAa,CAACzD,MAAM,CAACG,OAAO,EAAEP,aAAa,CAAC;MACvE,MAAMQ,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACG,MAAM,GAAG,MAAM;QACjB,MAAMC,MAAM,GAAGV,SAAS,CAACK,OAAO;QAChC,MAAMM,GAAG,GAAGV,UAAU,CAACI,OAAO;QAC9BK,MAAM,CAAChB,KAAK,GAAGY,GAAG,CAACZ,KAAK;QACxBgB,MAAM,CAACf,MAAM,GAAGW,GAAG,CAACX,MAAM;QAC1BgB,GAAG,CAACE,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACxBhB,WAAW,CAAC,KAAK,CAAC;QAClBa,gBAAgB,CAACE,OAAO,GAAGC,GAAG;MAChC,CAAC;MACDA,GAAG,CAACY,GAAG,GAAGwC,YAAY;IACxB,CAAC,CAAC,OAAO3C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C6C,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,MAAMD,aAAa,GAAGA,CAACrF,KAAK,EAAEiB,IAAI,KAAK;IACrC,MAAMmB,MAAM,GAAGuC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMvC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMY,MAAM,GAAGlD,KAAK,CAACuF,YAAY,GAAGvF,KAAK,CAACoB,KAAK;IAC/C,MAAM+B,MAAM,GAAGnD,KAAK,CAACwF,aAAa,GAAGxF,KAAK,CAACqB,MAAM;IAEjDe,MAAM,CAAChB,KAAK,GAAGH,IAAI,CAACG,KAAK;IACzBgB,MAAM,CAACf,MAAM,GAAGJ,IAAI,CAACI,MAAM;IAE3BgB,GAAG,CAACE,SAAS,CACXvC,KAAK,EACLiB,IAAI,CAACK,CAAC,GAAG4B,MAAM,EACfjC,IAAI,CAACM,CAAC,GAAG4B,MAAM,EACflC,IAAI,CAACG,KAAK,GAAG8B,MAAM,EACnBjC,IAAI,CAACI,MAAM,GAAG8B,MAAM,EACpB,CAAC,EACD,CAAC,EACDlC,IAAI,CAACG,KAAK,EACVH,IAAI,CAACI,MACP,CAAC;IAED,OAAOe,MAAM,CAACqD,SAAS,CAAC,WAAW,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAGvB,MAAM,CAAC,8BAA8B,CAAC;IACvD,MAAMwB,SAAS,GAAGxB,MAAM,CAAC,+BAA+B,CAAC;IAEzD,IAAIuB,QAAQ,IAAIC,SAAS,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,IAAI,CAACE,KAAK,CAACD,SAAS,CAAC,EAAE;MAClE,IAAI,CAACjE,UAAU,CAACI,OAAO,IAAI,CAACL,SAAS,CAACK,OAAO,IAAI,CAACF,gBAAgB,CAACE,OAAO,EAAE;MAE5E,MAAMK,MAAM,GAAGV,SAAS,CAACK,OAAO;MAChC,MAAMM,GAAG,GAAGV,UAAU,CAACI,OAAO;MAC9B,MAAM2C,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACnD,MAAMC,OAAO,GAAGH,UAAU,CAACpC,UAAU,CAAC,IAAI,CAAC;MAE3CoC,UAAU,CAACtD,KAAK,GAAG0E,QAAQ,CAACH,QAAQ,CAAC;MACrCjB,UAAU,CAACrD,MAAM,GAAGyE,QAAQ,CAACF,SAAS,CAAC;;MAEvC;MACAf,OAAO,CAACtC,SAAS,CAACV,gBAAgB,CAACE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE2C,UAAU,CAACtD,KAAK,EAAEsD,UAAU,CAACrD,MAAM,CAAC;;MAEtF;MACAe,MAAM,CAAChB,KAAK,GAAGsD,UAAU,CAACtD,KAAK;MAC/BgB,MAAM,CAACf,MAAM,GAAGqD,UAAU,CAACrD,MAAM;MACjCgB,GAAG,CAACE,SAAS,CAACmC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC;EACF,CAAC;EAED,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACpE,UAAU,CAACI,OAAO,IAAI,CAACL,SAAS,CAACK,OAAO,IAAI,CAACF,gBAAgB,CAACE,OAAO,EAAE;IAE5E,MAAMK,MAAM,GAAGV,SAAS,CAACK,OAAO;IAChC,MAAMM,GAAG,GAAGV,UAAU,CAACI,OAAO;IAC9B,MAAMC,GAAG,GAAGH,gBAAgB,CAACE,OAAO;IAEpCK,MAAM,CAAChB,KAAK,GAAGY,GAAG,CAACZ,KAAK;IACxBgB,MAAM,CAACf,MAAM,GAAGW,GAAG,CAACX,MAAM;IAC1BgB,GAAG,CAACE,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMgE,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACtE,SAAS,CAACK,OAAO,EAAE;IAExB,IAAI;MACF,MAAMkE,OAAO,GAAGvE,SAAS,CAACK,OAAO,CAAC0D,SAAS,CAAC,WAAW,CAAC;MACxDtF,MAAM,CAAC;QACL+F,SAAS,EAAED,OAAO;QAClBE,QAAQ,EAAEnG,KAAK,CAACmG;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO1D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C6C,KAAK,CAAC,uCAAuC,CAAC;IAChD;EACF,CAAC;EAED,oBACE5F,OAAA,CAACH,UAAU;IACTU,MAAM,EAAEA,MAAO;IACfmG,cAAc,EAAElG,OAAQ;IACxBmG,SAAS,EAAC,aAAa;IACvBC,gBAAgB,EAAC,qBAAqB;IACtCC,yBAAyB,EAAE,KAAM;IAAAC,QAAA,gBAEjC9G,OAAA;MAAK2G,SAAS,EAAC,cAAc;MAAAG,QAAA,gBAC3B9G,OAAA;QAAA8G,QAAA,GAAI,cAAY,EAAC,CAAAxG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEyG,KAAK,MAAIzG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE0G,iBAAiB;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/DpH,OAAA;QAAQqH,OAAO,EAAE7G,OAAQ;QAACmG,SAAS,EAAC,WAAW;QAAAG,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eAENpH,OAAA;MAAK2G,SAAS,EAAC,eAAe;MAAAG,QAAA,gBAC5B9G,OAAA;QAAK2G,SAAS,EAAC,SAAS;QAAAG,QAAA,gBACtB9G,OAAA;UAAK2G,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACzB9G,OAAA;YACE2G,SAAS,EAAEhG,UAAU,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAG;YACjD0G,OAAO,EAAEA,CAAA,KAAMzG,aAAa,CAAC,MAAM,CAAE;YAAAkG,QAAA,EACtC;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YACE2G,SAAS,EAAEhG,UAAU,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAG;YAClD0G,OAAO,EAAEA,CAAA,KAAMzG,aAAa,CAAC,OAAO,CAAE;YAAAkG,QAAA,EACvC;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YAAQqH,OAAO,EAAE7C,aAAc;YAAAsC,QAAA,EAAC;UAEhC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YAAQqH,OAAO,EAAEA,CAAA,KAAMvC,YAAY,CAAC,EAAE,CAAE;YAAAgC,QAAA,EAAC;UAEzC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YAAQqH,OAAO,EAAEA,CAAA,KAAMvC,YAAY,CAAC,CAAC,EAAE,CAAE;YAAAgC,QAAA,EAAC;UAE1C;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YAAQqH,OAAO,EAAEA,CAAA,KAAM/F,WAAW,CAAC,CAACD,QAAQ,CAAE;YAAAyF,QAAA,EAAC;UAE/C;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YAAQqH,OAAO,EAAErB,YAAa;YAAAc,QAAA,EAAC;UAE/B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpH,OAAA;YAAQqH,OAAO,EAAEhB,WAAY;YAAAS,QAAA,EAAC;UAE9B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELzG,UAAU,KAAK,OAAO,iBACrBX,OAAA;UAAK2G,SAAS,EAAC,gBAAgB;UAAAG,QAAA,gBAC7B9G,OAAA;YAAA8G,QAAA,EAAO;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrBpH,OAAA;YACEsH,IAAI,EAAC,OAAO;YACZC,KAAK,EAAE1G,UAAW;YAClB2G,QAAQ,EAAGnE,CAAC,IAAKvC,aAAa,CAACuC,CAAC,CAACoE,MAAM,CAACF,KAAK;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACFpH,OAAA;YAAA8G,QAAA,EAAO;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBpH,OAAA;YACEsH,IAAI,EAAC,OAAO;YACZI,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,IAAI;YACRJ,KAAK,EAAExG,UAAW;YAClByG,QAAQ,EAAGnE,CAAC,IAAKrC,aAAa,CAACoF,QAAQ,CAAC/C,CAAC,CAACoE,MAAM,CAACF,KAAK,CAAC;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACFpH,OAAA;YAAA8G,QAAA,GAAO/F,UAAU,EAAC,IAAE;UAAA;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENpH,OAAA;QAAK2G,SAAS,EAAC,kBAAkB;QAAAG,QAAA,EAC9B,CAAC3F,WAAW,gBACXnB,OAAA;UAAK2G,SAAS,EAAC,SAAS;UAAAG,QAAA,EAAC;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GAC7C/F,QAAQ,gBACVrB,OAAA;UAAK2G,SAAS,EAAC,WAAW;UAAAG,QAAA,gBACxB9G,OAAA,CAACF,SAAS;YACRyB,IAAI,EAAEA,IAAK;YACXiG,QAAQ,EAAEhG,OAAQ;YAClBoG,UAAU,EAAE7F,gBAAiB;YAC7B8F,aAAa,EAAE,IAAK;YAAAf,QAAA,eAEpB9G,OAAA;cACE8H,GAAG,EAAE5F,MAAO;cACZgB,GAAG,EAAE5C,KAAK,CAAC6C,SAAU;cACrB4E,GAAG,EAAC,cAAc;cAClBC,MAAM,EAAEA,CAAA,KAAMxG,OAAO,CAAC;gBAAEC,IAAI,EAAE,IAAI;gBAAEC,KAAK,EAAE,GAAG;gBAAEC,MAAM,EAAE,GAAG;gBAAEC,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAE,CAAC,CAAE;cAC3EoG,KAAK,EAAE;gBAAEC,QAAQ,EAAE,MAAM;gBAAEC,SAAS,EAAE;cAAO;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eACZpH,OAAA;YAAK2G,SAAS,EAAC,eAAe;YAAAG,QAAA,gBAC5B9G,OAAA;cAAQqH,OAAO,EAAE5B,kBAAmB;cAACkB,SAAS,EAAC,iBAAiB;cAAAG,QAAA,EAAC;YAEjE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpH,OAAA;cAAQqH,OAAO,EAAEA,CAAA,KAAM/F,WAAW,CAAC,KAAK,CAAE;cAACqF,SAAS,EAAC,mBAAmB;cAAAG,QAAA,EAAC;YAEzE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAENpH,OAAA;UACE8H,GAAG,EAAE9F,SAAU;UACf2E,SAAS,EAAC,gBAAgB;UAC1ByB,WAAW,EAAEzH,UAAU,KAAK,OAAO,GAAGyC,YAAY,GAAGiF,SAAU;UAC/DC,WAAW,EAAE3H,UAAU,KAAK,OAAO,GAAGwD,IAAI,GAAGkE,SAAU;UACvDE,SAAS,EAAE5H,UAAU,KAAK,OAAO,GAAG2D,WAAW,GAAG+D,SAAU;UAC5DG,YAAY,EAAE7H,UAAU,KAAK,OAAO,GAAG2D,WAAW,GAAG+D,SAAU;UAC/DJ,KAAK,EAAE;YACLQ,MAAM,EAAE9H,UAAU,KAAK,OAAO,GAAG,WAAW,GAAG,SAAS;YACxDuH,QAAQ,EAAE,MAAM;YAChBC,SAAS,EAAE,MAAM;YACjBO,MAAM,EAAE,yBAAyB;YACjCC,YAAY,EAAE;UAChB;QAAE;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENpH,OAAA;MAAK2G,SAAS,EAAC,cAAc;MAAAG,QAAA,gBAC3B9G,OAAA;QAAK2G,SAAS,EAAC,YAAY;QAAAG,QAAA,EACxBxG,KAAK,IAAI0B,SAAS,CAACK,OAAO,iBACzBrC,OAAA,CAAAE,SAAA;UAAA4G,QAAA,gBACE9G,OAAA;YAAA8G,QAAA,GAAM,QAAM,EAAC9E,SAAS,CAACK,OAAO,CAACX,KAAK,EAAC,MAAC,EAACM,SAAS,CAACK,OAAO,CAACV,MAAM;UAAA;YAAAsF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvEpH,OAAA;YAAA8G,QAAA,GAAM,YAAU,EAACxG,KAAK,CAACoB,KAAK,EAAC,MAAC,EAACpB,KAAK,CAACqB,MAAM;UAAA;YAAAsF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,eACnD;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNpH,OAAA;QAAK2G,SAAS,EAAC,eAAe;QAAAG,QAAA,gBAC5B9G,OAAA;UAAQqH,OAAO,EAAE7G,OAAQ;UAACmG,SAAS,EAAC,mBAAmB;UAAAG,QAAA,EAAC;QAExD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTpH,OAAA;UAAQqH,OAAO,EAAEf,UAAW;UAACK,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAAC;QAEzD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB,CAAC;AAAC1G,EAAA,CAhYIL,UAAU;AAAAuI,EAAA,GAAVvI,UAAU;AAkYhB,eAAeA,UAAU;AAAC,IAAAuI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}