{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaryan\\\\Documents\\\\coding\\\\image-gallery\\\\frontend\\\\src\\\\components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './ImageModal.css';\n\n// Set the app element for react-modal\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif (typeof window !== 'undefined') {\n  ReactModal.setAppElement('#root');\n}\nconst ImageModal = ({\n  image,\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [cropMode, setCropMode] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: 'px',\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const [rotation, setRotation] = useState(0);\n  const [scale, setScale] = useState(1);\n  const [currentImageSrc, setCurrentImageSrc] = useState(null);\n  const imgRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && image) {\n      setImageLoaded(false);\n      setCropMode(false);\n      setRotation(0);\n      setScale(1);\n      setCrop({\n        unit: 'px',\n        width: 200,\n        height: 200,\n        x: 0,\n        y: 0\n      });\n      setCurrentImageSrc(image.file_path);\n    }\n  }, [isOpen, image]);\n  const handleImageLoad = () => {\n    setImageLoaded(true);\n  };\n  const handleImageError = () => {\n    console.error('Failed to load image');\n    setImageLoaded(false);\n  };\n  const handleRotate = degrees => {\n    setRotation(prev => (prev + degrees) % 360);\n  };\n  const handleResize = () => {\n    const newScale = prompt('Enter scale factor (0.1 to 5):', scale);\n    if (newScale && !isNaN(newScale)) {\n      const scaleValue = parseFloat(newScale);\n      if (scaleValue >= 0.1 && scaleValue <= 5) {\n        setScale(scaleValue);\n      } else {\n        alert('Scale must be between 0.1 and 5');\n      }\n    }\n  };\n  const getCroppedImg = (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (!image || !crop.width || !crop.height) {\n      return null;\n    }\n\n    // Calculate scale factors\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n\n    // Set canvas dimensions to match the cropped area\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n\n    // Draw the cropped image onto the canvas\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          console.error('Canvas is empty');\n          return;\n        }\n        blob.name = fileName;\n        const url = URL.createObjectURL(blob);\n        resolve(url);\n      }, 'image/jpeg', 0.95);\n    });\n  };\n  const handleCropComplete = async () => {\n    if (!imgRef.current || !completedCrop) return;\n    try {\n      const croppedImageUrl = await getCroppedImg(imgRef.current, completedCrop, 'cropped-image.jpg');\n      if (croppedImageUrl) {\n        // Update the image source with the cropped version\n        setCurrentImageSrc(croppedImageUrl);\n        setCropMode(false);\n        setRotation(0);\n        setScale(1);\n      } else {\n        alert('Crop failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error cropping image:', error);\n      alert('Error cropping image. Please try again.');\n    }\n  };\n  const handleSave = async () => {\n    if (!imgRef.current) return;\n    try {\n      // Create a canvas to apply transformations\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      // Create a temporary image to get the current state\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = () => {\n        try {\n          // Set canvas dimensions\n          canvas.width = img.naturalWidth * scale;\n          canvas.height = img.naturalHeight * scale;\n\n          // Apply transformations\n          ctx.translate(canvas.width / 2, canvas.height / 2);\n          ctx.rotate(rotation * Math.PI / 180);\n          ctx.scale(scale, scale);\n          ctx.drawImage(img, -img.naturalWidth / 2, -img.naturalHeight / 2);\n          const dataURL = canvas.toDataURL('image/png');\n          onSave({\n            imageData: dataURL,\n            filename: image.filename\n          });\n        } catch (error) {\n          console.error('Error in canvas operations:', error);\n          alert('Error saving image.');\n        }\n      };\n      img.onerror = () => {\n        alert('Error loading image for saving.');\n      };\n      img.src = currentImageSrc;\n    } catch (error) {\n      console.error('Error saving image:', error);\n      alert('Error saving image. Please try again.');\n    }\n  };\n  const resetTransformations = () => {\n    setRotation(0);\n    setScale(1);\n    if (image) {\n      setCurrentImageSrc(image.file_path);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    className: \"image-modal\",\n    overlayClassName: \"image-modal-overlay\",\n    shouldCloseOnOverlayClick: false,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Edit Image: \", (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(90),\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Rotate 90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(-90),\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Rotate -90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResize,\n            className: \"btn\",\n            children: \"\\uD83D\\uDCCF Resize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCropMode(!cropMode),\n            className: cropMode ? 'btn active' : 'btn',\n            children: [\"\\u2702\\uFE0F \", cropMode ? 'Cancel Crop' : 'Crop']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTransformations,\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), cropMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCropComplete,\n            className: \"btn btn-primary\",\n            children: \"Apply Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: [!imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), cropMode ? /*#__PURE__*/_jsxDEV(ReactCrop, {\n          crop: crop,\n          onChange: setCrop,\n          onComplete: setCompletedCrop,\n          keepSelection: true,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: imgRef,\n            src: currentImageSrc,\n            alt: (image === null || image === void 0 ? void 0 : image.alt_text) || (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename),\n            onLoad: handleImageLoad,\n            onError: handleImageError,\n            style: {\n              maxWidth: '100%',\n              maxHeight: '60vh',\n              display: imageLoaded ? 'block' : 'none',\n              margin: '0 auto',\n              transform: `rotate(${rotation}deg) scale(${scale})`,\n              transformOrigin: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: imgRef,\n          src: currentImageSrc,\n          alt: (image === null || image === void 0 ? void 0 : image.alt_text) || (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename),\n          onLoad: handleImageLoad,\n          onError: handleImageError,\n          style: {\n            maxWidth: '100%',\n            maxHeight: '60vh',\n            display: imageLoaded ? 'block' : 'none',\n            margin: '0 auto',\n            transform: `rotate(${rotation}deg) scale(${scale})`,\n            transformOrigin: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: image && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Original: \", image.width, \"\\xD7\", image.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Rotation: \", rotation, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Scale: \", scale, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"btn btn-primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageModal, \"kGwpz4+ix63yvrFwa9j0i28GiLM=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactModal","ReactCrop","jsxDEV","_jsxDEV","Fragment","_Fragment","window","setAppElement","ImageModal","image","isOpen","onClose","onSave","_s","imageLoaded","setImageLoaded","cropMode","setCropMode","crop","setCrop","unit","width","height","x","y","completedCrop","setCompletedCrop","rotation","setRotation","scale","setScale","currentImageSrc","setCurrentImageSrc","imgRef","canvasRef","file_path","handleImageLoad","handleImageError","console","error","handleRotate","degrees","prev","handleResize","newScale","prompt","isNaN","scaleValue","parseFloat","alert","getCroppedImg","fileName","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","drawImage","Promise","resolve","toBlob","blob","name","url","URL","createObjectURL","handleCropComplete","current","croppedImageUrl","handleSave","img","Image","crossOrigin","onload","translate","rotate","Math","PI","dataURL","toDataURL","imageData","filename","onerror","src","resetTransformations","onRequestClose","className","overlayClassName","shouldCloseOnOverlayClick","children","title","original_filename","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onComplete","keepSelection","ref","alt","alt_text","onLoad","onError","style","maxWidth","maxHeight","display","margin","transform","transformOrigin","_c","$RefreshReg$"],"sources":["C:/Users/Aaryan/Documents/coding/image-gallery/frontend/src/components/ImageModal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './ImageModal.css';\r\n\r\n// Set the app element for react-modal\r\nif (typeof window !== 'undefined') {\r\n  ReactModal.setAppElement('#root');\r\n}\r\n\r\nconst ImageModal = ({ image, isOpen, onClose, onSave }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [cropMode, setCropMode] = useState(false);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [scale, setScale] = useState(1);\r\n  const [currentImageSrc, setCurrentImageSrc] = useState(null);\r\n  \r\n  const imgRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && image) {\r\n      setImageLoaded(false);\r\n      setCropMode(false);\r\n      setRotation(0);\r\n      setScale(1);\r\n      setCrop({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n      setCurrentImageSrc(image.file_path);\r\n    }\r\n  }, [isOpen, image]);\r\n\r\n  const handleImageLoad = () => {\r\n    setImageLoaded(true);\r\n  };\r\n\r\n  const handleImageError = () => {\r\n    console.error('Failed to load image');\r\n    setImageLoaded(false);\r\n  };\r\n\r\n  const handleRotate = (degrees) => {\r\n    setRotation(prev => (prev + degrees) % 360);\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const newScale = prompt('Enter scale factor (0.1 to 5):', scale);\r\n    if (newScale && !isNaN(newScale)) {\r\n      const scaleValue = parseFloat(newScale);\r\n      if (scaleValue >= 0.1 && scaleValue <= 5) {\r\n        setScale(scaleValue);\r\n      } else {\r\n        alert('Scale must be between 0.1 and 5');\r\n      }\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (image, crop, fileName) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    if (!image || !crop.width || !crop.height) {\r\n      return null;\r\n    }\r\n\r\n    // Calculate scale factors\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    \r\n    // Set canvas dimensions to match the cropped area\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    \r\n    // Draw the cropped image onto the canvas\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n    \r\n    return new Promise((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) {\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        const url = URL.createObjectURL(blob);\r\n        resolve(url);\r\n      }, 'image/jpeg', 0.95);\r\n    });\r\n  };\r\n\r\n  const handleCropComplete = async () => {\r\n    if (!imgRef.current || !completedCrop) return;\r\n\r\n    try {\r\n      const croppedImageUrl = await getCroppedImg(\r\n        imgRef.current,\r\n        completedCrop,\r\n        'cropped-image.jpg'\r\n      );\r\n      \r\n      if (croppedImageUrl) {\r\n        // Update the image source with the cropped version\r\n        setCurrentImageSrc(croppedImageUrl);\r\n        setCropMode(false);\r\n        setRotation(0);\r\n        setScale(1);\r\n      } else {\r\n        alert('Crop failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cropping image:', error);\r\n      alert('Error cropping image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!imgRef.current) return;\r\n    \r\n    try {\r\n      // Create a canvas to apply transformations\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      \r\n      // Create a temporary image to get the current state\r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n      \r\n      img.onload = () => {\r\n        try {\r\n          // Set canvas dimensions\r\n          canvas.width = img.naturalWidth * scale;\r\n          canvas.height = img.naturalHeight * scale;\r\n          \r\n          // Apply transformations\r\n          ctx.translate(canvas.width / 2, canvas.height / 2);\r\n          ctx.rotate((rotation * Math.PI) / 180);\r\n          ctx.scale(scale, scale);\r\n          ctx.drawImage(img, -img.naturalWidth / 2, -img.naturalHeight / 2);\r\n          \r\n          const dataURL = canvas.toDataURL('image/png');\r\n          onSave({\r\n            imageData: dataURL,\r\n            filename: image.filename\r\n          });\r\n        } catch (error) {\r\n          console.error('Error in canvas operations:', error);\r\n          alert('Error saving image.');\r\n        }\r\n      };\r\n      \r\n      img.onerror = () => {\r\n        alert('Error loading image for saving.');\r\n      };\r\n      \r\n      img.src = currentImageSrc;\r\n    } catch (error) {\r\n      console.error('Error saving image:', error);\r\n      alert('Error saving image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const resetTransformations = () => {\r\n    setRotation(0);\r\n    setScale(1);\r\n    if (image) {\r\n      setCurrentImageSrc(image.file_path);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n      className=\"image-modal\"\r\n      overlayClassName=\"image-modal-overlay\"\r\n      shouldCloseOnOverlayClick={false}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h3>Edit Image: {image?.title || image?.original_filename}</h3>\r\n        <button onClick={onClose} className=\"close-btn\">×</button>\r\n      </div>\r\n\r\n      <div className=\"modal-content\">\r\n        <div className=\"toolbar\">\r\n          <div className=\"tool-group\">\r\n            <button onClick={() => handleRotate(90)} className=\"btn\">\r\n              🔄 Rotate 90°\r\n            </button>\r\n            <button onClick={() => handleRotate(-90)} className=\"btn\">\r\n              🔄 Rotate -90°\r\n            </button>\r\n            <button onClick={handleResize} className=\"btn\">\r\n              📏 Resize\r\n            </button>\r\n            <button \r\n              onClick={() => setCropMode(!cropMode)} \r\n              className={cropMode ? 'btn active' : 'btn'}\r\n            >\r\n              ✂️ {cropMode ? 'Cancel Crop' : 'Crop'}\r\n            </button>\r\n            <button onClick={resetTransformations} className=\"btn\">\r\n              🔄 Reset\r\n            </button>\r\n          </div>\r\n\r\n          {cropMode && (\r\n            <div className=\"crop-controls\">\r\n              <button onClick={handleCropComplete} className=\"btn btn-primary\">\r\n                Apply Crop\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"canvas-container\">\r\n          {!imageLoaded && (\r\n            <div className=\"loading\">Loading image...</div>\r\n          )}\r\n          \r\n          {cropMode ? (\r\n            <ReactCrop\r\n              crop={crop}\r\n              onChange={setCrop}\r\n              onComplete={setCompletedCrop}\r\n              keepSelection={true}\r\n            >\r\n              <img\r\n                ref={imgRef}\r\n                src={currentImageSrc}\r\n                alt={image?.alt_text || image?.title || image?.original_filename}\r\n                onLoad={handleImageLoad}\r\n                onError={handleImageError}\r\n                style={{\r\n                  maxWidth: '100%',\r\n                  maxHeight: '60vh',\r\n                  display: imageLoaded ? 'block' : 'none',\r\n                  margin: '0 auto',\r\n                  transform: `rotate(${rotation}deg) scale(${scale})`,\r\n                  transformOrigin: 'center'\r\n                }}\r\n              />\r\n            </ReactCrop>\r\n          ) : (\r\n            <img\r\n              ref={imgRef}\r\n              src={currentImageSrc}\r\n              alt={image?.alt_text || image?.title || image?.original_filename}\r\n              onLoad={handleImageLoad}\r\n              onError={handleImageError}\r\n              style={{\r\n                maxWidth: '100%',\r\n                maxHeight: '60vh',\r\n                display: imageLoaded ? 'block' : 'none',\r\n                margin: '0 auto',\r\n                transform: `rotate(${rotation}deg) scale(${scale})`,\r\n                transformOrigin: 'center'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <div className=\"image-info\">\r\n          {image && (\r\n            <>\r\n              <span>Original: {image.width}×{image.height}</span>\r\n              <span>Rotation: {rotation}°</span>\r\n              <span>Scale: {scale}x</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"modal-actions\">\r\n          <button onClick={onClose} className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n          <button onClick={handleSave} className=\"btn btn-primary\">\r\n            Save Changes\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default ImageModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}