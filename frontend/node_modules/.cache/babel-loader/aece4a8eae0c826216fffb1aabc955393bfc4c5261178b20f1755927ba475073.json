{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaryan\\\\Documents\\\\coding\\\\image-gallery\\\\frontend\\\\src\\\\components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './ImageModal.css';\n\n// Set the app element for react-modal\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif (typeof window !== 'undefined') {\n  ReactModal.setAppElement('#root');\n}\nconst ImageModal = ({\n  image,\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [cropMode, setCropMode] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: 'px',\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const [rotation, setRotation] = useState(0);\n  const [scale, setScale] = useState(1);\n  const [currentImageSrc, setCurrentImageSrc] = useState(null);\n  const imgRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && image) {\n      setImageLoaded(false);\n      setCropMode(false);\n      setRotation(0);\n      setScale(1);\n      setCrop({\n        unit: 'px',\n        width: 200,\n        height: 200,\n        x: 0,\n        y: 0\n      });\n      setCurrentImageSrc(image.file_path);\n    }\n  }, [isOpen, image]);\n  const handleImageLoad = () => {\n    setImageLoaded(true);\n  };\n  const handleImageError = () => {\n    console.error('Failed to load image');\n    setImageLoaded(false);\n  };\n  const handleRotate = degrees => {\n    setRotation(prev => (prev + degrees) % 360);\n  };\n  const handleResize = () => {\n    const newScale = prompt('Enter scale factor (0.1 to 5):', scale);\n    if (newScale && !isNaN(newScale)) {\n      const scaleValue = parseFloat(newScale);\n      if (scaleValue >= 0.1 && scaleValue <= 5) {\n        setScale(scaleValue);\n      } else {\n        alert('Scale must be between 0.1 and 5');\n      }\n    }\n  };\n\n  // Create a CORS-friendly version of the image\n  const fetchImageWithCORS = async url => {\n    try {\n      const response = await fetch(url, {\n        mode: 'cors',\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch image');\n      }\n      const blob = await response.blob();\n      return URL.createObjectURL(blob);\n    } catch (error) {\n      console.error('Error fetching image:', error);\n      // Fallback to original URL\n      return url;\n    }\n  };\n  const getCroppedImg = async (imageElement, crop) => {\n    try {\n      // Create a CORS-friendly version of the image\n      const corsImageUrl = await fetchImageWithCORS(imageElement.src);\n      return new Promise(resolve => {\n        const image = new Image();\n        image.crossOrigin = 'anonymous';\n        image.onload = () => {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          const scaleX = image.naturalWidth / imageElement.width;\n          const scaleY = image.naturalHeight / imageElement.height;\n          canvas.width = crop.width;\n          canvas.height = crop.height;\n          ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n          resolve(canvas.toDataURL('image/png'));\n        };\n        image.onerror = () => {\n          // Fallback: try to crop without CORS (may not work)\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          const scaleX = imageElement.naturalWidth / imageElement.width;\n          const scaleY = imageElement.naturalHeight / imageElement.height;\n          canvas.width = crop.width;\n          canvas.height = crop.height;\n          try {\n            ctx.drawImage(imageElement, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n            resolve(canvas.toDataURL('image/png'));\n          } catch (error) {\n            console.error('Crop failed:', error);\n            resolve(null);\n          }\n        };\n        image.src = corsImageUrl;\n      });\n    } catch (error) {\n      console.error('Error in getCroppedImg:', error);\n      return null;\n    }\n  };\n  const handleCropComplete = async () => {\n    if (!imgRef.current || !completedCrop) return;\n    try {\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\n      if (croppedImage) {\n        // Update the image source with the cropped version\n        setCurrentImageSrc(croppedImage);\n        setCropMode(false);\n        setRotation(0);\n        setScale(1);\n      } else {\n        alert('Crop failed due to CORS restrictions. The image may need to be served with proper CORS headers.');\n      }\n    } catch (error) {\n      console.error('Error cropping image:', error);\n      alert('Error cropping image. Please try again.');\n    }\n  };\n  const handleSave = async () => {\n    if (!imgRef.current) return;\n    try {\n      // Create a CORS-friendly version of the current image\n      const corsImageUrl = await fetchImageWithCORS(imgRef.current.src);\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = () => {\n        try {\n          // Create a canvas to apply transformations\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          // Set canvas dimensions\n          canvas.width = img.naturalWidth * scale;\n          canvas.height = img.naturalHeight * scale;\n\n          // Apply transformations\n          ctx.translate(canvas.width / 2, canvas.height / 2);\n          ctx.rotate(rotation * Math.PI / 180);\n          ctx.scale(scale, scale);\n          ctx.drawImage(img, -img.naturalWidth / 2, -img.naturalHeight / 2);\n          const dataURL = canvas.toDataURL('image/png');\n          onSave({\n            imageData: dataURL,\n            filename: image.filename\n          });\n        } catch (error) {\n          console.error('Error in canvas operations:', error);\n          alert('Error saving image. This may be due to CORS restrictions.');\n        }\n      };\n      img.onerror = () => {\n        // Fallback: try to save without CORS (may not work)\n        try {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          const currentImg = imgRef.current;\n          canvas.width = currentImg.naturalWidth * scale;\n          canvas.height = currentImg.naturalHeight * scale;\n          ctx.translate(canvas.width / 2, canvas.height / 2);\n          ctx.rotate(rotation * Math.PI / 180);\n          ctx.scale(scale, scale);\n          ctx.drawImage(currentImg, -currentImg.naturalWidth / 2, -currentImg.naturalHeight / 2);\n          const dataURL = canvas.toDataURL('image/png');\n          onSave({\n            imageData: dataURL,\n            filename: image.filename\n          });\n        } catch (fallbackError) {\n          console.error('Fallback save failed:', fallbackError);\n          alert('Unable to save image due to CORS restrictions. The image server needs to allow cross-origin access.');\n        }\n      };\n      img.src = corsImageUrl;\n    } catch (error) {\n      console.error('Error saving image:', error);\n      alert('Error saving image. Please try again.');\n    }\n  };\n  const resetTransformations = () => {\n    setRotation(0);\n    setScale(1);\n    if (image) {\n      setCurrentImageSrc(image.file_path);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    className: \"image-modal\",\n    overlayClassName: \"image-modal-overlay\",\n    shouldCloseOnOverlayClick: false,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Edit Image: \", (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(90),\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Rotate 90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(-90),\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Rotate -90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResize,\n            className: \"btn\",\n            children: \"\\uD83D\\uDCCF Resize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCropMode(!cropMode),\n            className: cropMode ? 'btn active' : 'btn',\n            children: [\"\\u2702\\uFE0F \", cropMode ? 'Cancel Crop' : 'Crop']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTransformations,\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), cropMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCropComplete,\n            className: \"btn btn-primary\",\n            children: \"Apply Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: [!imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), cropMode ? /*#__PURE__*/_jsxDEV(ReactCrop, {\n          crop: crop,\n          onChange: setCrop,\n          onComplete: setCompletedCrop,\n          keepSelection: true,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: imgRef,\n            src: currentImageSrc,\n            alt: (image === null || image === void 0 ? void 0 : image.alt_text) || (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename),\n            onLoad: handleImageLoad,\n            onError: handleImageError,\n            crossOrigin: \"anonymous\",\n            style: {\n              maxWidth: '100%',\n              maxHeight: '60vh',\n              display: imageLoaded ? 'block' : 'none',\n              margin: '0 auto',\n              transform: `rotate(${rotation}deg) scale(${scale})`,\n              transformOrigin: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: imgRef,\n          src: currentImageSrc,\n          alt: (image === null || image === void 0 ? void 0 : image.alt_text) || (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename),\n          onLoad: handleImageLoad,\n          onError: handleImageError,\n          crossOrigin: \"anonymous\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '60vh',\n            display: imageLoaded ? 'block' : 'none',\n            margin: '0 auto',\n            transform: `rotate(${rotation}deg) scale(${scale})`,\n            transformOrigin: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: image && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Original: \", image.width, \"\\xD7\", image.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Rotation: \", rotation, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Scale: \", scale, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"btn btn-primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageModal, \"qYl6T0RFOqbktgSoxfajQDN94Jc=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactModal","ReactCrop","jsxDEV","_jsxDEV","Fragment","_Fragment","window","setAppElement","ImageModal","image","isOpen","onClose","onSave","_s","imageLoaded","setImageLoaded","cropMode","setCropMode","crop","setCrop","unit","width","height","x","y","completedCrop","setCompletedCrop","rotation","setRotation","scale","setScale","currentImageSrc","setCurrentImageSrc","imgRef","file_path","handleImageLoad","handleImageError","console","error","handleRotate","degrees","prev","handleResize","newScale","prompt","isNaN","scaleValue","parseFloat","alert","fetchImageWithCORS","url","response","fetch","mode","credentials","ok","Error","blob","URL","createObjectURL","getCroppedImg","imageElement","corsImageUrl","src","Promise","resolve","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","drawImage","toDataURL","onerror","handleCropComplete","current","croppedImage","handleSave","img","translate","rotate","Math","PI","dataURL","imageData","filename","currentImg","fallbackError","resetTransformations","onRequestClose","className","overlayClassName","shouldCloseOnOverlayClick","children","title","original_filename","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onComplete","keepSelection","ref","alt","alt_text","onLoad","onError","style","maxWidth","maxHeight","display","margin","transform","transformOrigin","_c","$RefreshReg$"],"sources":["C:/Users/Aaryan/Documents/coding/image-gallery/frontend/src/components/ImageModal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './ImageModal.css';\r\n\r\n// Set the app element for react-modal\r\nif (typeof window !== 'undefined') {\r\n  ReactModal.setAppElement('#root');\r\n}\r\n\r\nconst ImageModal = ({ image, isOpen, onClose, onSave }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [cropMode, setCropMode] = useState(false);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [scale, setScale] = useState(1);\r\n  const [currentImageSrc, setCurrentImageSrc] = useState(null);\r\n  \r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && image) {\r\n      setImageLoaded(false);\r\n      setCropMode(false);\r\n      setRotation(0);\r\n      setScale(1);\r\n      setCrop({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n      setCurrentImageSrc(image.file_path);\r\n    }\r\n  }, [isOpen, image]);\r\n\r\n  const handleImageLoad = () => {\r\n    setImageLoaded(true);\r\n  };\r\n\r\n  const handleImageError = () => {\r\n    console.error('Failed to load image');\r\n    setImageLoaded(false);\r\n  };\r\n\r\n  const handleRotate = (degrees) => {\r\n    setRotation(prev => (prev + degrees) % 360);\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const newScale = prompt('Enter scale factor (0.1 to 5):', scale);\r\n    if (newScale && !isNaN(newScale)) {\r\n      const scaleValue = parseFloat(newScale);\r\n      if (scaleValue >= 0.1 && scaleValue <= 5) {\r\n        setScale(scaleValue);\r\n      } else {\r\n        alert('Scale must be between 0.1 and 5');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Create a CORS-friendly version of the image\r\n  const fetchImageWithCORS = async (url) => {\r\n    try {\r\n      const response = await fetch(url, {\r\n        mode: 'cors',\r\n        credentials: 'omit'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch image');\r\n      }\r\n      \r\n      const blob = await response.blob();\r\n      return URL.createObjectURL(blob);\r\n    } catch (error) {\r\n      console.error('Error fetching image:', error);\r\n      // Fallback to original URL\r\n      return url;\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = async (imageElement, crop) => {\r\n    try {\r\n      // Create a CORS-friendly version of the image\r\n      const corsImageUrl = await fetchImageWithCORS(imageElement.src);\r\n      \r\n      return new Promise((resolve) => {\r\n        const image = new Image();\r\n        image.crossOrigin = 'anonymous';\r\n        image.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          const scaleX = image.naturalWidth / imageElement.width;\r\n          const scaleY = image.naturalHeight / imageElement.height;\r\n\r\n          canvas.width = crop.width;\r\n          canvas.height = crop.height;\r\n\r\n          ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n          );\r\n\r\n          resolve(canvas.toDataURL('image/png'));\r\n        };\r\n        image.onerror = () => {\r\n          // Fallback: try to crop without CORS (may not work)\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          const scaleX = imageElement.naturalWidth / imageElement.width;\r\n          const scaleY = imageElement.naturalHeight / imageElement.height;\r\n\r\n          canvas.width = crop.width;\r\n          canvas.height = crop.height;\r\n\r\n          try {\r\n            ctx.drawImage(\r\n              imageElement,\r\n              crop.x * scaleX,\r\n              crop.y * scaleY,\r\n              crop.width * scaleX,\r\n              crop.height * scaleY,\r\n              0,\r\n              0,\r\n              crop.width,\r\n              crop.height\r\n            );\r\n            resolve(canvas.toDataURL('image/png'));\r\n          } catch (error) {\r\n            console.error('Crop failed:', error);\r\n            resolve(null);\r\n          }\r\n        };\r\n        image.src = corsImageUrl;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error in getCroppedImg:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleCropComplete = async () => {\r\n    if (!imgRef.current || !completedCrop) return;\r\n\r\n    try {\r\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\r\n      \r\n      if (croppedImage) {\r\n        // Update the image source with the cropped version\r\n        setCurrentImageSrc(croppedImage);\r\n        setCropMode(false);\r\n        setRotation(0);\r\n        setScale(1);\r\n      } else {\r\n        alert('Crop failed due to CORS restrictions. The image may need to be served with proper CORS headers.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cropping image:', error);\r\n      alert('Error cropping image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!imgRef.current) return;\r\n    \r\n    try {\r\n      // Create a CORS-friendly version of the current image\r\n      const corsImageUrl = await fetchImageWithCORS(imgRef.current.src);\r\n      \r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n      \r\n      img.onload = () => {\r\n        try {\r\n          // Create a canvas to apply transformations\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          \r\n          // Set canvas dimensions\r\n          canvas.width = img.naturalWidth * scale;\r\n          canvas.height = img.naturalHeight * scale;\r\n          \r\n          // Apply transformations\r\n          ctx.translate(canvas.width / 2, canvas.height / 2);\r\n          ctx.rotate((rotation * Math.PI) / 180);\r\n          ctx.scale(scale, scale);\r\n          ctx.drawImage(img, -img.naturalWidth / 2, -img.naturalHeight / 2);\r\n          \r\n          const dataURL = canvas.toDataURL('image/png');\r\n          onSave({\r\n            imageData: dataURL,\r\n            filename: image.filename\r\n          });\r\n        } catch (error) {\r\n          console.error('Error in canvas operations:', error);\r\n          alert('Error saving image. This may be due to CORS restrictions.');\r\n        }\r\n      };\r\n      \r\n      img.onerror = () => {\r\n        // Fallback: try to save without CORS (may not work)\r\n        try {\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          const currentImg = imgRef.current;\r\n          \r\n          canvas.width = currentImg.naturalWidth * scale;\r\n          canvas.height = currentImg.naturalHeight * scale;\r\n          \r\n          ctx.translate(canvas.width / 2, canvas.height / 2);\r\n          ctx.rotate((rotation * Math.PI) / 180);\r\n          ctx.scale(scale, scale);\r\n          ctx.drawImage(currentImg, -currentImg.naturalWidth / 2, -currentImg.naturalHeight / 2);\r\n          \r\n          const dataURL = canvas.toDataURL('image/png');\r\n          onSave({\r\n            imageData: dataURL,\r\n            filename: image.filename\r\n          });\r\n        } catch (fallbackError) {\r\n          console.error('Fallback save failed:', fallbackError);\r\n          alert('Unable to save image due to CORS restrictions. The image server needs to allow cross-origin access.');\r\n        }\r\n      };\r\n      \r\n      img.src = corsImageUrl;\r\n    } catch (error) {\r\n      console.error('Error saving image:', error);\r\n      alert('Error saving image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const resetTransformations = () => {\r\n    setRotation(0);\r\n    setScale(1);\r\n    if (image) {\r\n      setCurrentImageSrc(image.file_path);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n      className=\"image-modal\"\r\n      overlayClassName=\"image-modal-overlay\"\r\n      shouldCloseOnOverlayClick={false}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h3>Edit Image: {image?.title || image?.original_filename}</h3>\r\n        <button onClick={onClose} className=\"close-btn\">×</button>\r\n      </div>\r\n\r\n      <div className=\"modal-content\">\r\n        <div className=\"toolbar\">\r\n          <div className=\"tool-group\">\r\n            <button onClick={() => handleRotate(90)} className=\"btn\">\r\n              🔄 Rotate 90°\r\n            </button>\r\n            <button onClick={() => handleRotate(-90)} className=\"btn\">\r\n              🔄 Rotate -90°\r\n            </button>\r\n            <button onClick={handleResize} className=\"btn\">\r\n              📏 Resize\r\n            </button>\r\n            <button \r\n              onClick={() => setCropMode(!cropMode)} \r\n              className={cropMode ? 'btn active' : 'btn'}\r\n            >\r\n              ✂️ {cropMode ? 'Cancel Crop' : 'Crop'}\r\n            </button>\r\n            <button onClick={resetTransformations} className=\"btn\">\r\n              🔄 Reset\r\n            </button>\r\n          </div>\r\n\r\n          {cropMode && (\r\n            <div className=\"crop-controls\">\r\n              <button onClick={handleCropComplete} className=\"btn btn-primary\">\r\n                Apply Crop\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"canvas-container\">\r\n          {!imageLoaded && (\r\n            <div className=\"loading\">Loading image...</div>\r\n          )}\r\n          \r\n          {cropMode ? (\r\n            <ReactCrop\r\n              crop={crop}\r\n              onChange={setCrop}\r\n              onComplete={setCompletedCrop}\r\n              keepSelection={true}\r\n            >\r\n              <img\r\n                ref={imgRef}\r\n                src={currentImageSrc}\r\n                alt={image?.alt_text || image?.title || image?.original_filename}\r\n                onLoad={handleImageLoad}\r\n                onError={handleImageError}\r\n                crossOrigin=\"anonymous\"\r\n                style={{\r\n                  maxWidth: '100%',\r\n                  maxHeight: '60vh',\r\n                  display: imageLoaded ? 'block' : 'none',\r\n                  margin: '0 auto',\r\n                  transform: `rotate(${rotation}deg) scale(${scale})`,\r\n                  transformOrigin: 'center'\r\n                }}\r\n              />\r\n            </ReactCrop>\r\n          ) : (\r\n            <img\r\n              ref={imgRef}\r\n              src={currentImageSrc}\r\n              alt={image?.alt_text || image?.title || image?.original_filename}\r\n              onLoad={handleImageLoad}\r\n              onError={handleImageError}\r\n              crossOrigin=\"anonymous\"\r\n              style={{\r\n                maxWidth: '100%',\r\n                maxHeight: '60vh',\r\n                display: imageLoaded ? 'block' : 'none',\r\n                margin: '0 auto',\r\n                transform: `rotate(${rotation}deg) scale(${scale})`,\r\n                transformOrigin: 'center'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <div className=\"image-info\">\r\n          {image && (\r\n            <>\r\n              <span>Original: {image.width}×{image.height}</span>\r\n              <span>Rotation: {rotation}°</span>\r\n              <span>Scale: {scale}x</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"modal-actions\">\r\n          <button onClick={onClose} className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n          <button onClick={handleSave} className=\"btn btn-primary\">\r\n            Save Changes\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default ImageModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}