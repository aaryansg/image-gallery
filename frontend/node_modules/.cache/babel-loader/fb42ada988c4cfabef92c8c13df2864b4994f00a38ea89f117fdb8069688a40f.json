{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaryan\\\\Documents\\\\coding\\\\image-gallery\\\\frontend\\\\src\\\\components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './ImageModal.css';\n\n// Set the app element for react-modal\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif (typeof window !== 'undefined') {\n  ReactModal.setAppElement('#root');\n}\nconst ImageModal = ({\n  image,\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [cropMode, setCropMode] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: 'px',\n    width: 200,\n    height: 200,\n    x: 0,\n    y: 0\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const [rotation, setRotation] = useState(0);\n  const [scale, setScale] = useState(1);\n  const imgRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && image) {\n      setImageLoaded(false);\n      setCropMode(false);\n      setRotation(0);\n      setScale(1);\n      setCrop({\n        unit: 'px',\n        width: 200,\n        height: 200,\n        x: 0,\n        y: 0\n      });\n    }\n  }, [isOpen, image]);\n  const handleImageLoad = () => {\n    setImageLoaded(true);\n  };\n  const handleImageError = () => {\n    console.error('Failed to load image');\n    setImageLoaded(false);\n  };\n  const handleRotate = degrees => {\n    setRotation(prev => (prev + degrees) % 360);\n  };\n  const handleResize = () => {\n    const newScale = prompt('Enter scale factor (0.1 to 5):', scale);\n    if (newScale && !isNaN(newScale)) {\n      const scaleValue = parseFloat(newScale);\n      if (scaleValue >= 0.1 && scaleValue <= 5) {\n        setScale(scaleValue);\n      } else {\n        alert('Scale must be between 0.1 and 5');\n      }\n    }\n  };\n  const getCroppedImg = (image, crop) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return canvas.toDataURL('image/png');\n  };\n  const handleCropComplete = async () => {\n    if (!imgRef.current || !completedCrop) return;\n    try {\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\n\n      // Create a new image element to get dimensions\n      const img = new Image();\n      img.onload = () => {\n        // Update the image source and reset crop mode\n        imgRef.current.src = croppedImage;\n        setCropMode(false);\n        setRotation(0);\n        setScale(1);\n      };\n      img.src = croppedImage;\n    } catch (error) {\n      console.error('Error cropping image:', error);\n      alert('Error cropping image. Please try again.');\n    }\n  };\n  const handleSave = () => {\n    if (!imgRef.current) return;\n    try {\n      // Create a canvas to apply transformations\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = imgRef.current;\n\n      // Set canvas dimensions\n      canvas.width = img.naturalWidth * scale;\n      canvas.height = img.naturalHeight * scale;\n\n      // Apply transformations\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate(rotation * Math.PI / 180);\n      ctx.scale(scale, scale);\n      ctx.drawImage(img, -img.naturalWidth / 2, -img.naturalHeight / 2);\n      const dataURL = canvas.toDataURL('image/png');\n      onSave({\n        imageData: dataURL,\n        filename: image.filename\n      });\n    } catch (error) {\n      console.error('Error saving image:', error);\n      alert('Error saving image. Please try again.');\n    }\n  };\n  const resetTransformations = () => {\n    setRotation(0);\n    setScale(1);\n    if (image) {\n      imgRef.current.src = image.file_path;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    className: \"image-modal\",\n    overlayClassName: \"image-modal-overlay\",\n    shouldCloseOnOverlayClick: false,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Edit Image: \", (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(90),\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Rotate 90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRotate(-90),\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Rotate -90\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResize,\n            className: \"btn\",\n            children: \"\\uD83D\\uDCCF Resize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCropMode(!cropMode),\n            className: cropMode ? 'btn active' : 'btn',\n            children: [\"\\u2702\\uFE0F \", cropMode ? 'Cancel Crop' : 'Crop']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTransformations,\n            className: \"btn\",\n            children: \"\\uD83D\\uDD04 Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), cropMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCropComplete,\n            className: \"btn btn-primary\",\n            children: \"Apply Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: [!imageLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), cropMode ? /*#__PURE__*/_jsxDEV(ReactCrop, {\n          crop: crop,\n          onChange: setCrop,\n          onComplete: setCompletedCrop,\n          keepSelection: true,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: imgRef,\n            src: image === null || image === void 0 ? void 0 : image.file_path,\n            alt: (image === null || image === void 0 ? void 0 : image.alt_text) || (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename),\n            onLoad: handleImageLoad,\n            onError: handleImageError,\n            style: {\n              maxWidth: '100%',\n              maxHeight: '60vh',\n              display: imageLoaded ? 'block' : 'none',\n              margin: '0 auto',\n              transform: `rotate(${rotation}deg) scale(${scale})`,\n              transformOrigin: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: imgRef,\n          src: image === null || image === void 0 ? void 0 : image.file_path,\n          alt: (image === null || image === void 0 ? void 0 : image.alt_text) || (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename),\n          onLoad: handleImageLoad,\n          onError: handleImageError,\n          style: {\n            maxWidth: '100%',\n            maxHeight: '60vh',\n            display: imageLoaded ? 'block' : 'none',\n            margin: '0 auto',\n            transform: `rotate(${rotation}deg) scale(${scale})`,\n            transformOrigin: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: image && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Original: \", image.width, \"\\xD7\", image.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Rotation: \", rotation, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Scale: \", scale, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"btn btn-primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageModal, \"AHUU5qmF1fVBkJHZe1f+9BUq/do=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactModal","ReactCrop","jsxDEV","_jsxDEV","Fragment","_Fragment","window","setAppElement","ImageModal","image","isOpen","onClose","onSave","_s","imageLoaded","setImageLoaded","cropMode","setCropMode","crop","setCrop","unit","width","height","x","y","completedCrop","setCompletedCrop","rotation","setRotation","scale","setScale","imgRef","canvasRef","handleImageLoad","handleImageError","console","error","handleRotate","degrees","prev","handleResize","newScale","prompt","isNaN","scaleValue","parseFloat","alert","getCroppedImg","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","drawImage","toDataURL","handleCropComplete","current","croppedImage","img","Image","onload","src","handleSave","translate","rotate","Math","PI","dataURL","imageData","filename","resetTransformations","file_path","onRequestClose","className","overlayClassName","shouldCloseOnOverlayClick","children","title","original_filename","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","onComplete","keepSelection","ref","alt","alt_text","onLoad","onError","style","maxWidth","maxHeight","display","margin","transform","transformOrigin","_c","$RefreshReg$"],"sources":["C:/Users/Aaryan/Documents/coding/image-gallery/frontend/src/components/ImageModal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './ImageModal.css';\r\n\r\n// Set the app element for react-modal\r\nif (typeof window !== 'undefined') {\r\n  ReactModal.setAppElement('#root');\r\n}\r\n\r\nconst ImageModal = ({ image, isOpen, onClose, onSave }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [cropMode, setCropMode] = useState(false);\r\n  const [crop, setCrop] = useState({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [scale, setScale] = useState(1);\r\n  \r\n  const imgRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && image) {\r\n      setImageLoaded(false);\r\n      setCropMode(false);\r\n      setRotation(0);\r\n      setScale(1);\r\n      setCrop({ unit: 'px', width: 200, height: 200, x: 0, y: 0 });\r\n    }\r\n  }, [isOpen, image]);\r\n\r\n  const handleImageLoad = () => {\r\n    setImageLoaded(true);\r\n  };\r\n\r\n  const handleImageError = () => {\r\n    console.error('Failed to load image');\r\n    setImageLoaded(false);\r\n  };\r\n\r\n  const handleRotate = (degrees) => {\r\n    setRotation(prev => (prev + degrees) % 360);\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const newScale = prompt('Enter scale factor (0.1 to 5):', scale);\r\n    if (newScale && !isNaN(newScale)) {\r\n      const scaleValue = parseFloat(newScale);\r\n      if (scaleValue >= 0.1 && scaleValue <= 5) {\r\n        setScale(scaleValue);\r\n      } else {\r\n        alert('Scale must be between 0.1 and 5');\r\n      }\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (image, crop) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return canvas.toDataURL('image/png');\r\n  };\r\n\r\n  const handleCropComplete = async () => {\r\n    if (!imgRef.current || !completedCrop) return;\r\n\r\n    try {\r\n      const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\r\n      \r\n      // Create a new image element to get dimensions\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        // Update the image source and reset crop mode\r\n        imgRef.current.src = croppedImage;\r\n        setCropMode(false);\r\n        setRotation(0);\r\n        setScale(1);\r\n      };\r\n      img.src = croppedImage;\r\n    } catch (error) {\r\n      console.error('Error cropping image:', error);\r\n      alert('Error cropping image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!imgRef.current) return;\r\n    \r\n    try {\r\n      // Create a canvas to apply transformations\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const img = imgRef.current;\r\n      \r\n      // Set canvas dimensions\r\n      canvas.width = img.naturalWidth * scale;\r\n      canvas.height = img.naturalHeight * scale;\r\n      \r\n      // Apply transformations\r\n      ctx.translate(canvas.width / 2, canvas.height / 2);\r\n      ctx.rotate((rotation * Math.PI) / 180);\r\n      ctx.scale(scale, scale);\r\n      ctx.drawImage(img, -img.naturalWidth / 2, -img.naturalHeight / 2);\r\n      \r\n      const dataURL = canvas.toDataURL('image/png');\r\n      onSave({\r\n        imageData: dataURL,\r\n        filename: image.filename\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving image:', error);\r\n      alert('Error saving image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const resetTransformations = () => {\r\n    setRotation(0);\r\n    setScale(1);\r\n    if (image) {\r\n      imgRef.current.src = image.file_path;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n      className=\"image-modal\"\r\n      overlayClassName=\"image-modal-overlay\"\r\n      shouldCloseOnOverlayClick={false}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h3>Edit Image: {image?.title || image?.original_filename}</h3>\r\n        <button onClick={onClose} className=\"close-btn\">×</button>\r\n      </div>\r\n\r\n      <div className=\"modal-content\">\r\n        <div className=\"toolbar\">\r\n          <div className=\"tool-group\">\r\n            <button onClick={() => handleRotate(90)} className=\"btn\">\r\n              🔄 Rotate 90°\r\n            </button>\r\n            <button onClick={() => handleRotate(-90)} className=\"btn\">\r\n              🔄 Rotate -90°\r\n            </button>\r\n            <button onClick={handleResize} className=\"btn\">\r\n              📏 Resize\r\n            </button>\r\n            <button \r\n              onClick={() => setCropMode(!cropMode)} \r\n              className={cropMode ? 'btn active' : 'btn'}\r\n            >\r\n              ✂️ {cropMode ? 'Cancel Crop' : 'Crop'}\r\n            </button>\r\n            <button onClick={resetTransformations} className=\"btn\">\r\n              🔄 Reset\r\n            </button>\r\n          </div>\r\n\r\n          {cropMode && (\r\n            <div className=\"crop-controls\">\r\n              <button onClick={handleCropComplete} className=\"btn btn-primary\">\r\n                Apply Crop\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"canvas-container\">\r\n          {!imageLoaded && (\r\n            <div className=\"loading\">Loading image...</div>\r\n          )}\r\n          \r\n          {cropMode ? (\r\n            <ReactCrop\r\n              crop={crop}\r\n              onChange={setCrop}\r\n              onComplete={setCompletedCrop}\r\n              keepSelection={true}\r\n            >\r\n              <img\r\n                ref={imgRef}\r\n                src={image?.file_path}\r\n                alt={image?.alt_text || image?.title || image?.original_filename}\r\n                onLoad={handleImageLoad}\r\n                onError={handleImageError}\r\n                style={{\r\n                  maxWidth: '100%',\r\n                  maxHeight: '60vh',\r\n                  display: imageLoaded ? 'block' : 'none',\r\n                  margin: '0 auto',\r\n                  transform: `rotate(${rotation}deg) scale(${scale})`,\r\n                  transformOrigin: 'center'\r\n                }}\r\n              />\r\n            </ReactCrop>\r\n          ) : (\r\n            <img\r\n              ref={imgRef}\r\n              src={image?.file_path}\r\n              alt={image?.alt_text || image?.title || image?.original_filename}\r\n              onLoad={handleImageLoad}\r\n              onError={handleImageError}\r\n              style={{\r\n                maxWidth: '100%',\r\n                maxHeight: '60vh',\r\n                display: imageLoaded ? 'block' : 'none',\r\n                margin: '0 auto',\r\n                transform: `rotate(${rotation}deg) scale(${scale})`,\r\n                transformOrigin: 'center'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <div className=\"image-info\">\r\n          {image && (\r\n            <>\r\n              <span>Original: {image.width}×{image.height}</span>\r\n              <span>Rotation: {rotation}°</span>\r\n              <span>Scale: {scale}x</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"modal-actions\">\r\n          <button onClick={onClose} className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n          <button onClick={handleSave} className=\"btn btn-primary\">\r\n            Save Changes\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default ImageModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}