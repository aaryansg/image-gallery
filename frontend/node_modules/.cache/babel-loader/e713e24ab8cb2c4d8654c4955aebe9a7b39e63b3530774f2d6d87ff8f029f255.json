{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaryan\\\\Downloads\\\\image-gallery\\\\image-gallery\\\\frontend\\\\src\\\\components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './ImageModal.css';\n\n// Set the app element for react-modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactModal.setAppElement('#root');\nconst ImageModal = ({\n  image,\n  isOpen,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [activeTool, setActiveTool] = useState('select');\n  const [brushColor, setBrushColor] = useState('#ff0000');\n  const [brushWidth, setBrushWidth] = useState(5);\n  const [cropMode, setCropMode] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: '%',\n    width: 80,\n    height: 80\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const canvasRef = useRef(null);\n  const imgRef = useRef(null);\n  const contextRef = useRef(null);\n  const imageRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && image) {\n      setIsImageLoaded(false);\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = () => {\n        imageRef.current = img;\n        setIsImageLoaded(true);\n\n        // Initialize canvas only when image is loaded\n        if (canvasRef.current) {\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          contextRef.current = ctx;\n          canvas.width = img.width;\n          canvas.height = img.height;\n          ctx.drawImage(img, 0, 0);\n        }\n      };\n      img.src = image.file_path;\n    }\n  }, [isOpen, image]);\n  const startDrawing = e => {\n    if (activeTool !== 'brush' || !contextRef.current) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x, y);\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing || !contextRef.current) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    contextRef.current.lineTo(x, y);\n    contextRef.current.strokeStyle = brushColor;\n    contextRef.current.lineWidth = brushWidth;\n    contextRef.current.lineCap = 'round';\n    contextRef.current.stroke();\n  };\n  const stopDrawing = () => {\n    if (contextRef.current) {\n      contextRef.current.closePath();\n    }\n    setIsDrawing(false);\n  };\n  const handleAddText = () => {\n    if (!contextRef.current) return;\n    const text = prompt('Enter text:');\n    if (text) {\n      contextRef.current.font = '20px Arial';\n      contextRef.current.fillStyle = brushColor;\n      contextRef.current.fillText(text, 100, 100);\n    }\n  };\n  const handleSave = () => {\n    if (!canvasRef.current) return;\n    const dataURL = canvasRef.current.toDataURL('image/png');\n    onSave(dataURL);\n  };\n  const handleCropComplete = async () => {\n    if (!imgRef.current || !completedCrop || !contextRef.current) return;\n    const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\n    const img = new Image();\n    img.onload = () => {\n      if (canvasRef.current && contextRef.current) {\n        const canvas = canvasRef.current;\n        const ctx = contextRef.current;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        setCropMode(false);\n      }\n    };\n    img.src = croppedImage;\n  };\n  const getCroppedImg = (image, crop) => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return canvas.toDataURL('image/png');\n  };\n  const clearCanvas = () => {\n    if (!canvasRef.current || !contextRef.current || !imageRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = contextRef.current;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Reload original image\n    ctx.drawImage(imageRef.current, 0, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    className: \"image-modal\",\n    overlayClassName: \"image-modal-overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Edit Image: \", (image === null || image === void 0 ? void 0 : image.title) || (image === null || image === void 0 ? void 0 : image.original_filename)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTool === 'select' ? 'active' : '',\n            onClick: () => setActiveTool('select'),\n            children: \"\\u270B Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTool === 'brush' ? 'active' : '',\n            onClick: () => setActiveTool('brush'),\n            children: \"\\uD83D\\uDD8C\\uFE0F Brush\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddText,\n            children: \"\\uD83D\\uDCDD Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cropMode ? 'active' : '',\n            onClick: () => setCropMode(!cropMode),\n            children: \"\\u2702\\uFE0F Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearCanvas,\n            children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), activeTool === 'brush' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brush-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: brushColor,\n            onChange: e => setBrushColor(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"50\",\n            value: brushWidth,\n            onChange: e => setBrushWidth(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [brushWidth, \"px\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: !isImageLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this) : cropMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crop-mode\",\n          children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n            crop: crop,\n            onChange: setCrop,\n            onComplete: setCompletedCrop,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              ref: imgRef,\n              src: image === null || image === void 0 ? void 0 : image.file_path,\n              alt: \"Crop preview\",\n              style: {\n                maxWidth: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crop-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCropComplete,\n              className: \"btn btn-primary\",\n              children: \"Apply Crop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCropMode(false),\n              className: \"btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"drawing-canvas\",\n          onMouseDown: startDrawing,\n          onMouseMove: draw,\n          onMouseUp: stopDrawing,\n          onMouseLeave: stopDrawing,\n          style: {\n            cursor: activeTool === 'brush' ? 'crosshair' : 'default',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            border: '2px solid var(--bg-tertiary)',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"btn\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"btn btn-primary\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageModal, \"gYi3kDOw5UNagbUfw5rdM1cLNm0=\");\n_c = ImageModal;\nexport default ImageModal;\nvar _c;\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactModal","ReactCrop","jsxDEV","_jsxDEV","setAppElement","ImageModal","image","isOpen","onClose","onSave","_s","activeTool","setActiveTool","brushColor","setBrushColor","brushWidth","setBrushWidth","cropMode","setCropMode","crop","setCrop","unit","width","height","completedCrop","setCompletedCrop","isDrawing","setIsDrawing","isImageLoaded","setIsImageLoaded","canvasRef","imgRef","contextRef","imageRef","img","Image","crossOrigin","onload","current","canvas","ctx","getContext","drawImage","src","file_path","startDrawing","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","beginPath","moveTo","draw","lineTo","strokeStyle","lineWidth","lineCap","stroke","stopDrawing","closePath","handleAddText","text","prompt","font","fillStyle","fillText","handleSave","dataURL","toDataURL","handleCropComplete","croppedImage","getCroppedImg","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","clearCanvas","clearRect","onRequestClose","className","overlayClassName","children","title","original_filename","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","target","min","max","onComplete","ref","alt","style","maxWidth","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","cursor","maxHeight","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Aaryan/Downloads/image-gallery/image-gallery/frontend/src/components/ImageModal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './ImageModal.css';\r\n\r\n// Set the app element for react-modal\r\nReactModal.setAppElement('#root');\r\n\r\nconst ImageModal = ({ image, isOpen, onClose, onSave }) => {\r\n  const [activeTool, setActiveTool] = useState('select');\r\n  const [brushColor, setBrushColor] = useState('#ff0000');\r\n  const [brushWidth, setBrushWidth] = useState(5);\r\n  const [cropMode, setCropMode] = useState(false);\r\n  const [crop, setCrop] = useState({ unit: '%', width: 80, height: 80 });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n  \r\n  const canvasRef = useRef(null);\r\n  const imgRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && image) {\r\n      setIsImageLoaded(false);\r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n      img.onload = () => {\r\n        imageRef.current = img;\r\n        setIsImageLoaded(true);\r\n        \r\n        // Initialize canvas only when image is loaded\r\n        if (canvasRef.current) {\r\n          const canvas = canvasRef.current;\r\n          const ctx = canvas.getContext('2d');\r\n          contextRef.current = ctx;\r\n          \r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          ctx.drawImage(img, 0, 0);\r\n        }\r\n      };\r\n      img.src = image.file_path;\r\n    }\r\n  }, [isOpen, image]);\r\n\r\n  const startDrawing = (e) => {\r\n    if (activeTool !== 'brush' || !contextRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(x, y);\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!isDrawing || !contextRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    contextRef.current.lineTo(x, y);\r\n    contextRef.current.strokeStyle = brushColor;\r\n    contextRef.current.lineWidth = brushWidth;\r\n    contextRef.current.lineCap = 'round';\r\n    contextRef.current.stroke();\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    if (contextRef.current) {\r\n      contextRef.current.closePath();\r\n    }\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const handleAddText = () => {\r\n    if (!contextRef.current) return;\r\n    \r\n    const text = prompt('Enter text:');\r\n    if (text) {\r\n      contextRef.current.font = '20px Arial';\r\n      contextRef.current.fillStyle = brushColor;\r\n      contextRef.current.fillText(text, 100, 100);\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!canvasRef.current) return;\r\n    \r\n    const dataURL = canvasRef.current.toDataURL('image/png');\r\n    onSave(dataURL);\r\n  };\r\n\r\n  const handleCropComplete = async () => {\r\n    if (!imgRef.current || !completedCrop || !contextRef.current) return;\r\n\r\n    const croppedImage = await getCroppedImg(imgRef.current, completedCrop);\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      if (canvasRef.current && contextRef.current) {\r\n        const canvas = canvasRef.current;\r\n        const ctx = contextRef.current;\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n        setCropMode(false);\r\n      }\r\n    };\r\n    img.src = croppedImage;\r\n  };\r\n\r\n  const getCroppedImg = (image, crop) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return canvas.toDataURL('image/png');\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    if (!canvasRef.current || !contextRef.current || !imageRef.current) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = contextRef.current;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n    // Reload original image\r\n    ctx.drawImage(imageRef.current, 0, 0);\r\n  };\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      onRequestClose={onClose}\r\n      className=\"image-modal\"\r\n      overlayClassName=\"image-modal-overlay\"\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h3>Edit Image: {image?.title || image?.original_filename}</h3>\r\n        <button onClick={onClose} className=\"close-btn\">×</button>\r\n      </div>\r\n\r\n      <div className=\"modal-content\">\r\n        <div className=\"toolbar\">\r\n          <div className=\"tool-group\">\r\n            <button\r\n              className={activeTool === 'select' ? 'active' : ''}\r\n              onClick={() => setActiveTool('select')}\r\n            >\r\n              ✋ Select\r\n            </button>\r\n            <button\r\n              className={activeTool === 'brush' ? 'active' : ''}\r\n              onClick={() => setActiveTool('brush')}\r\n            >\r\n              🖌️ Brush\r\n            </button>\r\n            <button onClick={handleAddText}>\r\n              📝 Text\r\n            </button>\r\n            <button\r\n              className={cropMode ? 'active' : ''}\r\n              onClick={() => setCropMode(!cropMode)}\r\n            >\r\n              ✂️ Crop\r\n            </button>\r\n            <button onClick={clearCanvas}>\r\n              🗑️ Clear\r\n            </button>\r\n          </div>\r\n\r\n          {activeTool === 'brush' && (\r\n            <div className=\"brush-controls\">\r\n              <input\r\n                type=\"color\"\r\n                value={brushColor}\r\n                onChange={(e) => setBrushColor(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"50\"\r\n                value={brushWidth}\r\n                onChange={(e) => setBrushWidth(e.target.value)}\r\n              />\r\n              <span>{brushWidth}px</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"canvas-container\">\r\n          {!isImageLoaded ? (\r\n            <div className=\"loading\">Loading image...</div>\r\n          ) : cropMode ? (\r\n            <div className=\"crop-mode\">\r\n              <ReactCrop\r\n                crop={crop}\r\n                onChange={setCrop}\r\n                onComplete={setCompletedCrop}\r\n              >\r\n                <img\r\n                  ref={imgRef}\r\n                  src={image?.file_path}\r\n                  alt=\"Crop preview\"\r\n                  style={{ maxWidth: '100%' }}\r\n                />\r\n              </ReactCrop>\r\n              <div className=\"crop-controls\">\r\n                <button onClick={handleCropComplete} className=\"btn btn-primary\">\r\n                  Apply Crop\r\n                </button>\r\n                <button onClick={() => setCropMode(false)} className=\"btn\">\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <canvas\r\n              ref={canvasRef}\r\n              className=\"drawing-canvas\"\r\n              onMouseDown={startDrawing}\r\n              onMouseMove={draw}\r\n              onMouseUp={stopDrawing}\r\n              onMouseLeave={stopDrawing}\r\n              style={{ \r\n                cursor: activeTool === 'brush' ? 'crosshair' : 'default',\r\n                maxWidth: '100%',\r\n                maxHeight: '100%',\r\n                border: '2px solid var(--bg-tertiary)',\r\n                borderRadius: '8px'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <button onClick={onClose} className=\"btn\">\r\n          Cancel\r\n        </button>\r\n        <button onClick={handleSave} className=\"btn btn-primary\">\r\n          Save Changes\r\n        </button>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default ImageModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}